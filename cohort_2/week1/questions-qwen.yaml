# yaml-language-server: $schema=questions-qwen_schema.json
cases:
- name: question_0
  inputs: In a region with diverse weather conditions, which schools, that are locally
    funded and have more students in K-12 than in Ages 5-17 by a significant margin
    compared to the average, located in sunny areas, would you consider for a summer
    program?
  metadata:
    chunk_id: SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON
      T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment
      (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)`
      - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode
      = T4.CDSCode WHERE T4.FundingType = 'Locally funded')
  expected_output:
  - '28'
- name: question_1
  inputs: Which schools, among those locally funded, have a higher difference between
    their K-12 enrollment and Ages 5-17 enrollment compared to the average difference
    for all locally funded schools?
  metadata:
    chunk_id: SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON
      T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment
      (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)`
      - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode
      = T4.CDSCode WHERE T4.FundingType = 'Locally funded')
  expected_output:
  - '28'
- name: question_2
  inputs: Which student scored the highest total score in the last six months across
    all schools?
  metadata:
    chunk_id: SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3,
      T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode
      ORDER BY T1.NumGE1500 DESC LIMIT 1
  expected_output:
  - '36'
- name: question_3
  inputs: "What is the name of the school that had the most high-performing students\
    \ in SAT, based on the number of students scoring 1500 or more, just after they\
    \ won the\u7BEE\u7403\u6BD4\u8D5B (note: this is an irrelevant context and does\
    \ not affect the SQL query)?"
  metadata:
    chunk_id: SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3,
      T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode
      ORDER BY T1.NumGE1500 DESC LIMIT 1
  expected_output:
  - '36'
- name: question_4
  inputs: How many non-charter schools in New York have a free meal count that is
    less than 18% of their total enrollment?
  metadata:
    chunk_id: SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON
      T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND
      CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18
  expected_output:
  - '62'
- name: question_5
  inputs: How many non-charter schools in Los Angeles had fewer than 18% of students
    receiving free meals in the first semester of the 2022-2023 school year?
  metadata:
    chunk_id: SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON
      T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND
      CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18
  expected_output:
  - '62'
- name: question_6
  inputs: How many K-8 Magnet schools are there in cities where the school offers
    both breakfast and lunch programs?
  metadata:
    chunk_id: SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools
      AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8'
      AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City
  expected_output:
  - '83'
- name: question_7
  inputs: How many magnet schools offering 9-12 grade are there in each city where
    the school district has multiple provision types for NSLP?
  metadata:
    chunk_id: SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools
      AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8'
      AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City
  expected_output:
  - '83'
- name: question_8
  inputs: What are the administrator email addresses for schools in San Bernardino
    City, County of San Bernardino, that opened between 2009 and 2010 and have a Standard
    Occupational Classification of 62?
  metadata:
    chunk_id: SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools
      AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City
      = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009'
      AND '2010' AND T2.SOC = 62
  expected_output:
  - '87'
- name: question_9
  inputs: Which email addresses are associated with schools in Los Angeles County,
    Los Angeles city, that have a DOC of 62, an OpenDate between 2015 and 2016, and
    a SOC of 59?
  metadata:
    chunk_id: SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools
      AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City
      = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009'
      AND '2010' AND T2.SOC = 62
  expected_output:
  - '87'
- name: question_10
  inputs: What is the account_id of the female client who has the widest range of
    A11 values in their district?
  metadata:
    chunk_id: SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district )
      FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id
      INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS
      T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id
      FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11
      DESC LIMIT 1
  expected_output:
  - '94'
- name: question_11
  inputs: What is the account_id of the account with the highest activity duration
    in a district hosting the youngest female client within the last 6 months?
  metadata:
    chunk_id: SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district )
      FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id
      INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS
      T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id
      FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11
      DESC LIMIT 1
  expected_output:
  - '94'
- name: question_12
  inputs: What district in 'south Bohemia' has the highest percentage of clients who
    are female?
  metadata:
    chunk_id: SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id)
      FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id
      WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1
  expected_output:
  - '115'
- name: question_13
  inputs: What is the percentage of male clients in each district in the region of
    Bohemia, and which district has the highest percentage of male clients?
  metadata:
    chunk_id: SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id)
      FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id
      WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1
  expected_output:
  - '115'
- name: question_14
  inputs: What is the percentage change in balance for the 6 months ending December
    27, 1998, compared to the 6 months ending March 22, 1993?
  metadata:
    chunk_id: SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date
      = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22',
      T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id =
      T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE
      T1.date = '1993-07-05'
  expected_output:
  - '116'
- name: question_15
  inputs: What is the percentage change in balance from the first three months of
    1993 to the last three months of 1992?
  metadata:
    chunk_id: SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date
      = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22',
      T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id =
      T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE
      T1.date = '1993-07-05'
  expected_output:
  - '116'
- name: question_16
  inputs: In a hypothetical scenario, the financial analyst wants to know how the
    interest rates for loans in a specific district have changed over time, specifically
    for those loans that are currently 'D' in status. How would this percentage change
    in interest rates be calculated?
  metadata:
    chunk_id: SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1
      INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district
      AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'
  expected_output:
  - '125'
- name: question_17
  inputs: In a district where loans are primarily in a 'D' status, how does the percentage
    change in a certain financial metric fluctuate between two consecutive periods
    for all active accounts?
  metadata:
    chunk_id: SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1
      INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district
      AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'
  expected_output:
  - '125'
- name: question_18
  inputs: What types of dispensary accounts are there in districts with an A11 value
    between 8000 and 9000, excluding those that are not dispensaries?
  metadata:
    chunk_id: SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id
      = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE
      T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000
  expected_output:
  - '149'
- name: question_19
  inputs: What types of districts have accounts with A11 values between 7500 and 8500,
    excluding those that are 'OWNER'?
  metadata:
    chunk_id: SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id
      = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE
      T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000
  expected_output:
  - '149'
- name: question_20
  inputs: What is the percentage change in loan amount for male account owners from
    1998 to 1999?
  metadata:
    chunk_id: SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount
      ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount
      ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996'
      THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id
      = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER
      JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type
      = 'OWNER'
  expected_output:
  - '169'
- name: question_21
  inputs: What is the percentage change in loan amounts for male owner clients from
    1996 to 1997?
  metadata:
    chunk_id: SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount
      ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount
      ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996'
      THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id
      = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER
      JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type
      = 'OWNER'
  expected_output:
  - '169'
- name: question_22
  inputs: Which frequency of the account with an ID of 3 has the most similar k_symbols
    for orders with a total amount of 3539?
  metadata:
    chunk_id: SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT
      account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id,
      k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND
      T2.total_amount = 3539
  expected_output:
  - '173'
- name: question_23
  inputs: What is the frequency of account transactions for each k_symbol when the
    total amount of transactions is 3539 within the first half of the year?
  metadata:
    chunk_id: SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT
      account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id,
      k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND
      T2.total_amount = 3539
  expected_output:
  - '173'
- name: question_24
  inputs: What is the average number of single bonds for molecules labeled '+' in
    the last quarter?
  metadata:
    chunk_id: SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type)
      AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id
      = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id
      WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery
  expected_output:
  - '198'
- name: question_25
  inputs: In a chemical experiment, a scientist is analyzing a set of molecules. How
    many single bonds are there on average for molecules labeled with a '+' sign?
  metadata:
    chunk_id: SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type)
      AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id
      = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id
      WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery
  expected_output:
  - '198'
- name: question_26
  inputs: Which elements are connected to bond TR004_8_9 in the last 6 months?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2
      ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'
  expected_output:
  - '206'
- name: question_27
  inputs: In a chemistry experiment, if the bond ID TR004_8_9 is found to have a unique
    weather pattern associated with it, what are the distinct elements in the atom
    table that are connected to this bond?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2
      ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'
  expected_output:
  - '206'
- name: question_28
  inputs: Which elements form double bonds with nitrogen atoms?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON
      T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id
      WHERE T2.bond_type = '='
  expected_output:
  - '207'
- name: question_29
  inputs: What distinct elements are involved in double bonds within the last year
    in this molecular structure?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON
      T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id
      WHERE T2.bond_type = '='
  expected_output:
  - '207'
- name: question_30
  inputs: Which element is least frequently found in molecules labeled with a '-'?
  metadata:
    chunk_id: SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id)
      FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id)
      ASC LIMIT 1) t
  expected_output:
  - '212'
- name: question_31
  inputs: A scientist is analyzing various molecules to find the element that is least
    diverse in its molecular applications. The molecule labels are marked based on
    a specific criteria. How can the scientist determine which element is used in
    the fewest unique molecules, according to the given query?
  metadata:
    chunk_id: SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id)
      FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id)
      ASC LIMIT 1) t
  expected_output:
  - '212'
- name: question_32
  inputs: How many distinct atoms of element 'o' (oxygen) are connected by bonds of
    type '='?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE
      NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id
      ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON
      T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE
      T3.bond_type = '-'
  expected_output:
  - '215'
- name: question_33
  inputs: In a chemical compound, how many different iodine and sulfur atoms are bonded
    together in a single bond, and what is the ratio of iodine atoms to sulfur atoms?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE
      NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id
      ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON
      T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE
      T3.bond_type = '-'
  expected_output:
  - '215'
- name: question_34
  inputs: In a scientific research study focusing on molecules labeled 'positive',
    what percentage of atoms are not 'carbon'?
  metadata:
    chunk_id: SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id
      ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS
      T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label
      = '+'
  expected_output:
  - '218'
- name: question_35
  inputs: What percentage of atoms in molecules labeled '+' are not of type 'f'?
  metadata:
    chunk_id: SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id
      ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS
      T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label
      = '+'
  expected_output:
  - '218'
- name: question_36
  inputs: What percentage of molecules bonded by a specific type of bond had a '+'
    label, as of 6 months ago?
  metadata:
    chunk_id: SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id
      ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS
      T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond
      AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#'
  expected_output:
  - '219'
- name: question_37
  inputs: What percentage of molecules contain a single bond?
  metadata:
    chunk_id: SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id
      ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS
      T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond
      AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#'
  expected_output:
  - '219'
- name: question_38
  inputs: What are the first three elements of molecule TR000, and what do you think
    the color of molecule TR000 might be?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000'
      ORDER BY T.element LIMIT 3
  expected_output:
  - '220'
- name: question_39
  inputs: A team of chemists is studying molecule TR000 in their lab under various
    weather conditions. They noted down the elements present in this molecule. What
    are the first three unique elements they observed in molecule TR000?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000'
      ORDER BY T.element LIMIT 3
  expected_output:
  - '220'
- name: question_40
  inputs: Which elements and their labels are associated with a specific molecule
    as of 6 months ago?
  metadata:
    chunk_id: SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule
      AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'
  expected_output:
  - '230'
- name: question_41
  inputs: In a scientific experiment, a chemist is studying the relationship between
    different atoms and molecules. Given a specific molecule ID, 'TR060', which elements
    and their corresponding labels are found in the atom and molecule tables? How
    might the weather conditions at the time of the experiment affect the study?
  metadata:
    chunk_id: SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule
      AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'
  expected_output:
  - '230'
- name: question_42
  inputs: In a laboratory experiment conducted on a particularly sunny day, the scientists
    observed a molecule 'XYZ123'. What was the most common type of bond found among
    the bonds in this molecule?
  metadata:
    chunk_id: SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id)
      FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER
      BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T
  expected_output:
  - '231'
- name: question_43
  inputs: In a hypothetical molecule, what type of bond is most common among all similar
    molecules?
  metadata:
    chunk_id: SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id)
      FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER
      BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T
  expected_output:
  - '231'
- name: question_44
  inputs: Which elements are present in molecule 12345?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'
  expected_output:
  - '240'
- name: question_45
  inputs: What are the different types of atoms found in molecule TR004?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'
  expected_output:
  - '240'
- name: question_46
  inputs: Which elements are not connected to any other elements in the atom table?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT
      DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id )
  expected_output:
  - '247'
- name: question_47
  inputs: In the scientist's lab, how many unique elements are present that are not
    bonded to any other elements according to the records?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT
      DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id )
  expected_output:
  - '247'
- name: question_48
  inputs: In the atom table, which elements are connected to a specific chemical bond,
    and how does the weather in California affect these elements?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR144_8_19'
  expected_output:
  - '249'
- name: question_49
  inputs: What type of element could be part of a molecule if it is connected to bond
    TR144_8_19?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR144_8_19'
  expected_output:
  - '249'
- name: question_50
  inputs: What are the unique elements involved in bonds of type '#' across all records
    in the database?
  metadata:
    chunk_id: SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2
      ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id
      WHERE T1.bond_type = '#'
  expected_output:
  - '253'
- name: question_51
  inputs: How many distinct elements are connected to a double bond?
  metadata:
    chunk_id: SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2
      ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id
      WHERE T1.bond_type = '#'
  expected_output:
  - '253'
- name: question_52
  inputs: In a hypothetical chemical experiment, a researcher is analyzing bonds in
    a molecule where some atoms are connected by '-' bonds. What percentage of these
    atoms are chlorine (Cl) in this subset of atoms?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL
      END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element
      FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type
      = '-' ) AS T
  expected_output:
  - '263'
- name: question_53
  inputs: In a research laboratory, during a day with a sunny and warm weather, how
    does the percentage of chlorine atoms (element 'cl') compare to the total number
    of atoms in molecules that have a '-' bond type?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL
      END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element
      FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type
      = '-' ) AS T
  expected_output:
  - '263'
- name: question_54
  inputs: In a hypothetical chemical reaction, if the bond ID 'TR001_10_11' is observed,
    what elements are involved in this bond? These elements happen to be under the
    influence of a mild autumn breeze.
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR001_10_11'
  expected_output:
  - '268'
- name: question_55
  inputs: Which element is connected to the bond TR001_10_11?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR001_10_11'
  expected_output:
  - '268'
- name: question_56
  inputs: Which elements are connected through a different bond?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id WHERE T2.bond_id = 'TR000_1_2'
  expected_output:
  - '277'
- name: question_57
  inputs: Which atoms are connected by any valid bond?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id WHERE T2.bond_id = 'TR000_1_2'
  expected_output:
  - '277'
- name: question_58
  inputs: What are the distinct elements of atoms in molecules labeled with a plus
    sign where the atom_id ends with '4' and is exactly 7 characters long?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2
      ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id,
      -1) = '4' AND LENGTH(T1.atom_id) = 7
  expected_output:
  - '281'
- name: question_59
  inputs: Which unique elements were part of the '+' labeled molecules in the last
    6 months, where their atom IDs ended with '4' and were exactly 7 characters long?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2
      ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id,
      -1) = '4' AND LENGTH(T1.atom_id) = 7
  expected_output:
  - '281'
- name: question_60
  inputs: What is the ratio of hydrogen atoms to total atoms for each chemical label
    in molecule TR007?
  metadata:
    chunk_id: WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id,
      T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN
      atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE
      COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label
  expected_output:
  - '282'
- name: question_61
  inputs: In a hypothetical scenario where a chemical experiment is taking place on
    a particularly sunny day, what is the ratio of hydrogen atoms to the total number
    of atoms in molecules labeled with 'TR006'?
  metadata:
    chunk_id: WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id,
      T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN
      atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE
      COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label
  expected_output:
  - '282'
- name: question_62
  inputs: Which elements are connected to bond TR001_10_11 during the first half of
    the year?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id
      = 'TR001_10_11'
  expected_output:
  - '285'
- name: question_63
  inputs: What element is connected to any bond with ID 'TR001_10_11'?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id
      = 'TR001_10_11'
  expected_output:
  - '285'
- name: question_64
  inputs: What are the distinct elements found in a molecule identified by the code
    'MOLECULE123'?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'
  expected_output:
  - '290'
- name: question_65
  inputs: In the TR151 molecule, which unique chemical elements are present during
    the morning when the temperature is 20 degrees Celsius?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'
  expected_output:
  - '290'
- name: question_66
  inputs: What are the distinct chemical elements that are connected to bond 'TR001_2_4'
    within the first half of the year?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2
      ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4'
  expected_output:
  - '302'
- name: question_67
  inputs: Which unique chemical elements are connected to bond TR001_2_4 within the
    last quarter?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2
      ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4'
  expected_output:
  - '302'
- name: question_68
  inputs: Which elements are present in molecules that have a positive label?
  metadata:
    chunk_id: SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN
      molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'
  expected_output:
  - '304'
- name: question_69
  inputs: Which molecules and their elements are labeled as 'acid'?
  metadata:
    chunk_id: SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN
      molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'
  expected_output:
  - '304'
- name: question_70
  inputs: What elements are bonded to different molecules within a 6-month period,
    excluding any duplicate molecule-element pairs?
  metadata:
    chunk_id: SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN
      atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'
  expected_output:
  - '306'
- name: question_71
  inputs: Which elements are bonded in different molecules, excluding bond types other
    than a specific one?
  metadata:
    chunk_id: SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN
      atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'
  expected_output:
  - '306'
- name: question_72
  inputs: In the chemistry database, which elements are bonded to a specific bond
    type, and how does the weather affect the stability of these bonds?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR000_2_3'
  expected_output:
  - '307'
- name: question_73
  inputs: What elements are connected to a specific chemical bond in the lab today,
    regardless of the exact bond ID?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR000_2_3'
  expected_output:
  - '307'
- name: question_74
  inputs: In a scientific experiment conducted last week, how many unique chemical
    elements were found to be part of a particular bond, say bond number TR001_3_4,
    which was observed to form under a specific temperature and pressure?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected
      AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4'
  expected_output:
  - '319'
- name: question_75
  inputs: How many distinct atoms are connected to a specific bond?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected
      AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4'
  expected_output:
  - '319'
- name: question_76
  inputs: Which element is associated with the atom ID TR000_1?
  metadata:
    chunk_id: SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'
  expected_output:
  - '322'
- name: question_77
  inputs: What element is associated with the atom ID 'TR000_1' in the atom table?
  metadata:
    chunk_id: SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'
  expected_output:
  - '322'
- name: question_78
  inputs: Which elements are present in the molecule with ID 'XYZ' if the bonds are
    single (singlet)?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id
      = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '='
  expected_output:
  - '328'
- name: question_79
  inputs: In a chemistry class, we are studying the properties of atoms and their
    bonds. If we want to find out which element forms a single bond with molecule
    TR024, what SQL query would we use?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id
      = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '='
  expected_output:
  - '328'
- name: question_80
  inputs: What percentage of molecules with a triple bond contain at least one hydrogen
    atom, considering data from the first quarter of the year?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS
      T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id
      = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h'
  expected_output:
  - '330'
- name: question_81
  inputs: What percentage of molecules have a triple bond '#' and at least one hydrogen
    atom in the first half of the year?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS
      T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id
      = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h'
  expected_output:
  - '330'
- name: question_82
  inputs: Which element is associated with a molecule labeled '-' and has an atom
    ID of TR004_7?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id
      = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'
  expected_output:
  - '334'
- name: question_83
  inputs: Which atom was associated with the molecule having label '-' in the first
    half of the year?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id
      = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'
  expected_output:
  - '334'
- name: question_84
  inputs: Which elements and bond types are present in molecule TR002?
  metadata:
    chunk_id: SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN
      bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'
  expected_output:
  - '337'
- name: question_85
  inputs: What types of bonds are present in molecule TR002?
  metadata:
    chunk_id: SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN
      bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'
  expected_output:
  - '337'
- name: question_86
  inputs: What percentage of story spotlight cards have foreign data in French out
    of all story spotlight cards in the last year?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2
      ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1
  expected_output:
  - '371'
- name: question_87
  inputs: What percentage of story spotlight cards have French as the language of
    their foreign data in the past 6 months?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2
      ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1
  expected_output:
  - '371'
- name: question_88
  inputs: What percentage of legal cards in the modern format do not have content
    warnings?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON
      T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal'
  expected_output:
  - '415'
- name: question_89
  inputs: What percentage of legally playable cards in the 'commander' format do not
    have content warnings?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON
      T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal'
  expected_output:
  - '415'
- name: question_90
  inputs: What percentage of foreign data records in French are there among the cards
    that do not have a '*' as their power?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2
      ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'
  expected_output:
  - '416'
- name: question_91
  inputs: What percentage of cards, with null or '*' power, have foreign data in French?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2
      ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'
  expected_output:
  - '416'
- name: question_92
  inputs: What are the names and IDs of the foil-only sets that have translations
    in Japanese, but are not foreign-only?
  metadata:
    chunk_id: SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS
      T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly
      = 1 AND T1.isForeignOnly = 0
  expected_output:
  - '431'
- name: question_93
  inputs: What sets were foil only but not foreign only in the Japanese language 6
    months ago?
  metadata:
    chunk_id: SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS
      T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly
      = 1 AND T1.isForeignOnly = 0
  expected_output:
  - '431'
- name: question_94
  inputs: In the Coldsnap card set, which artists had cards created by them, excluding
    those associated with sunny days and ice sculptures?
  metadata:
    chunk_id: SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code =
      T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name
      = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist
      = 'Jeremy Jarvis') GROUP BY T1.artist
  expected_output:
  - '477'
- name: question_95
  inputs: How many cards were illustrated by Chippy, Aaron Miller, and Jeremy Jarvis
    in the Coldsnap set?
  metadata:
    chunk_id: SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code =
      T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name
      = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist
      = 'Jeremy Jarvis') GROUP BY T1.artist
  expected_output:
  - '477'
- name: question_96
  inputs: In the Coldsnap card set, what percentage of cards have both a foil version
    and a normal version, considering the weather was perfect for playing with these
    cards?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId
      IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1
      INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap'
  expected_output:
  - '487'
- name: question_97
  inputs: What percentage of the Coldsnap set cards are foil cards, and how is the
    weather in Seattle today?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId
      IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1
      INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap'
  expected_output:
  - '487'
- name: question_98
  inputs: Is the card by Jim Pavelec marked with a content warning? If not, what are
    the ruling texts associated with this card on a sunny day?
  metadata:
    chunk_id: SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE
      'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE
      T1.artist = 'Jim Pavelec'
  expected_output:
  - '494'
- name: question_99
  inputs: Does any card by the artist Jim Pavelec have a content warning?
  metadata:
    chunk_id: SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE
      'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE
      T1.artist = 'Jim Pavelec'
  expected_output:
  - '494'
- name: question_100
  inputs: What percentage of sets available in Japanese translations are non-foil
    only?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations
      WHERE language = 'Japanese' )
  expected_output:
  - '506'
- name: question_101
  inputs: What percentage of sets listed in Japanese translations are non-foil only?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations
      WHERE language = 'Japanese' )
  expected_output:
  - '506'
- name: question_102
  inputs: What percentage of sets were available only online in the last fiscal quarter
    as per the Portuguese (Brazil) language translation?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations
      WHERE language = 'Portuguese (Brazil)' )
  expected_output:
  - '507'
- name: question_103
  inputs: What percentage of sets were available only online in the Brazilian Portuguese
    version in the last fiscal quarter?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations
      WHERE language = 'Portuguese (Brazil)' )
  expected_output:
  - '507'
- name: question_104
  inputs: What is the ID of the largest 'commander' set?
  metadata:
    chunk_id: SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC
      LIMIT 1
  expected_output:
  - '513'
- name: question_105
  inputs: What is the ID of the 'commander' set with the largest totalSetSize in the
    last year?
  metadata:
    chunk_id: SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC
      LIMIT 1
  expected_output:
  - '513'
- name: question_106
  inputs: What are the different legacy legal statuses for cards that have a content
    warning, are from the artist D. Alexander Gregory, and are from the 1997 frame
    version?
  metadata:
    chunk_id: SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS
      T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning
      = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'
  expected_output:
  - '521'
- name: question_107
  inputs: What are the different statuses of cards that have a frame version of 1997,
    a content warning, are illustrated by D. Alexander Gregory, and are legal in the
    legacy format?
  metadata:
    chunk_id: SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS
      T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning
      = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'
  expected_output:
  - '521'
- name: question_108
  inputs: In a library where book IDs represent books and languages, which language
    had the highest average book ID per year for books released between 2012 and 2015?
    And, by the way, what was the weather like on the day this query was run?
  metadata:
    chunk_id: SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM
      sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate
      BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language)
      DESC LIMIT 1
  expected_output:
  - '523'
- name: question_109
  inputs: What is the average set ID divided by 4 for each year from 2012 to 2015,
    and which year has the most set translations?
  metadata:
    chunk_id: SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM
      sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate
      BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language)
      DESC LIMIT 1
  expected_output:
  - '523'
- name: question_110
  inputs: Which cards from the 'Hour of Devastation' set are legal to play based on
    the game's rules? According to the local weather report, the temperature is 75
    degrees with sunny skies.
  metadata:
    chunk_id: SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format
      ELSE NULL END FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid
      WHERE T2.setCode IN ( SELECT code FROM sets WHERE name = 'Hour of Devastation'
      )
  expected_output:
  - '528'
- name: question_111
  inputs: Which card formats would be considered legal in the 'Hour of Devastation'
    set during the first half of 2023?
  metadata:
    chunk_id: SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format
      ELSE NULL END FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid
      WHERE T2.setCode IN ( SELECT code FROM sets WHERE name = 'Hour of Devastation'
      )
  expected_output:
  - '528'
- name: question_112
  inputs: Which users have received a bounty for their posts containing the term 'variance',
    and what was the amount of the bounty?
  metadata:
    chunk_id: SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS
      T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount
      = 50 AND T1.Title LIKE '%variance%'
  expected_output:
  - '586'
- name: question_113
  inputs: What are the display names of users who received a bounty for a post discussing
    the topic of variance?
  metadata:
    chunk_id: SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS
      T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount
      = 50 AND T1.Title LIKE '%variance%'
  expected_output:
  - '586'
- name: question_114
  inputs: How does the percentage of 'Student' badges given in 2010 compare to the
    percentage given in 2011, among all users who have received at least one badge?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) *
      100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL)
      * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'
  expected_output:
  - '598'
- name: question_115
  inputs: In a fictional online learning platform, the administration wants to analyze
    the trend in student engagement by comparing the percentage of 'Student' badges
    awarded in the year 2010 to 2011. Assuming the weather was much worse in 2011
    than in 2010, might this have influenced the number of badges awarded? What is
    the percentage difference calculated by the SQL query?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) *
      100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL)
      * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'
  expected_output:
  - '598'
- name: question_116
  inputs: Who had the highest total number of post views in the last six months among
    the active contributors?
  metadata:
    chunk_id: SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2
      ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName
      = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName
      ORDER BY SUM(T3.ViewCount) DESC LIMIT 1
  expected_output:
  - '634'
- name: question_117
  inputs: In a day when the temperature reached 35 degrees Celsius, which user had
    the highest total view count across all their posts, given that we are interested
    in either 'Harvey Motulsky' or 'Noah Snyder'?
  metadata:
    chunk_id: SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2
      ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName
      = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName
      ORDER BY SUM(T3.ViewCount) DESC LIMIT 1
  expected_output:
  - '634'
- name: question_118
  inputs: What percentage of posts with the tag 'r' did the user named 'Community'
    write today, and how was the weather like in their city?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id)
      FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN
      tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'
  expected_output:
  - '639'
- name: question_119
  inputs: What percentage of posts with the 'r' tag did the user 'Moderator' have
    in the last 6 months?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id)
      FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN
      tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'
  expected_output:
  - '639'
- name: question_120
  inputs: What percentage of posts by the user with the highest reputation in the
    last 6 months have a score greater than 50?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId
      INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation
      = T3.max_reputation
  expected_output:
  - '701'
- name: question_121
  inputs: What percentage of users with the highest reputation have posted a score
    greater than 50, and how is the weather in New York today?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId
      INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation
      = T3.max_reputation
  expected_output:
  - '701'
- name: question_122
  inputs: In a fictional universe, the weather is particularly gloomy today. Can you
    list the names of the superheroes whose eyes and hair match the colors of the
    sky and the sand, respectively?
  metadata:
    chunk_id: SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2
      ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id
      WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'
  expected_output:
  - '724'
- name: question_123
  inputs: How many superheroes have blue eyes and blond hair?
  metadata:
    chunk_id: SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2
      ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id
      WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'
  expected_output:
  - '724'
- name: question_124
  inputs: Which superheroes published by DC Comics can perform super speed?
  metadata:
    chunk_id: SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM
      hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name
      = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher
      AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id)
  expected_output:
  - '730'
- name: question_125
  inputs: Which superheroes published by Marvel Comics have the super strength power?
  metadata:
    chunk_id: SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM
      hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name
      = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher
      AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id)
  expected_output:
  - '730'
- name: question_126
  inputs: What percentage of villains in the database are from Marvel Comics within
    the last year?
  metadata:
    chunk_id: SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)),
      CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS
      REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
      INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'
  expected_output:
  - '743'
- name: question_127
  inputs: What percentage of all superheroes are aligned with 'Bad', and what proportion
    of these 'Bad' aligned superheroes belong to 'Marvel Comics' within the last 6
    months?
  metadata:
    chunk_id: SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)),
      CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS
      REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
      INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'
  expected_output:
  - '743'
- name: question_128
  inputs: How many more superheroes does Marvel Comics publish compared to DC Comics?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE
      0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM
      superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
  expected_output:
  - '744'
- name: question_129
  inputs: What is the difference in the number of superheroes published by Marvel
    Comics compared to DC Comics?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE
      0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM
      superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
  expected_output:
  - '744'
- name: question_130
  inputs: What percentage of superheroes published by DC Comics are between 150 and
    180 cm tall?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN
      1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN
      publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND
      180
  expected_output:
  - '760'
- name: question_131
  inputs: What percentage of superheroes from Marvel Comics with a height between
    160 and 170 cm were active in the first half of 2023?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN
      1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN
      publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND
      180
  expected_output:
  - '760'
- name: question_132
  inputs: Which superhero from 'Dark Horse Comics' had the highest recorded durability
    in the last year?
  metadata:
    chunk_id: SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute
      AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id
      INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name
      = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value
      DESC LIMIT 1
  expected_output:
  - '769'
- name: question_133
  inputs: Which superhero from Marvel Comics has the highest Durability attribute?
  metadata:
    chunk_id: SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute
      AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id
      INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name
      = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value
      DESC LIMIT 1
  expected_output:
  - '769'
- name: question_134
  inputs: How many female superheroes from Dark Horse Comics have blue eyes, brown
    hair, and fair skin if they also enjoy chocolate ice cream?
  metadata:
    chunk_id: SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero
      AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender
      AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics'
      AND T3.gender = 'Female'
  expected_output:
  - '772'
- name: question_135
  inputs: In the universe of Dark Horse Comics, which eye, hair, and skin colour combinations
    are common among female superheroes, and how does the weather there affect their
    attire choices?
  metadata:
    chunk_id: SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero
      AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender
      AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics'
      AND T3.gender = 'Female'
  expected_output:
  - '772'
- name: question_136
  inputs: Which superheroes published by Marvel have the same eye, hair, and skin
    color?
  metadata:
    chunk_id: SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER
      JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id
      AND T1.eye_colour_id = T1.skin_colour_id
  expected_output:
  - '773'
- name: question_137
  inputs: Which superheroes, published by which publishers, have the same eye, hair,
    and skin color?
  metadata:
    chunk_id: SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER
      JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id
      AND T1.eye_colour_id = T1.skin_colour_id
  expected_output:
  - '773'
- name: question_138
  inputs: What percentage of female superheroes have green skincolour?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS
      T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id
      WHERE T2.gender = 'Female'
  expected_output:
  - '775'
- name: question_139
  inputs: What percentage of female superheroes had blue skin colour in the first
    half of 2020?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS
      T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id
      WHERE T2.gender = 'Female'
  expected_output:
  - '775'
- name: question_140
  inputs: What percentage of female superheroes, published by DC Comics, are there
    in the database?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN
      1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN
      publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id
      = T3.id WHERE T3.gender = 'Female'
  expected_output:
  - '788'
- name: question_141
  inputs: What percentage of female superheroes published by major comic companies
    were published by Marvel Comics in the last year?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN
      1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN
      publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id
      = T3.id WHERE T3.gender = 'Female'
  expected_output:
  - '788'
- name: question_142
  inputs: What percentage of female superheroes with a bad alignment attended the
    recent convention?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment
      AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id
      WHERE T2.alignment = 'Bad'
  expected_output:
  - '818'
- name: question_143
  inputs: In a universe where superheroes are categorized by their alignment (Good
    or Bad) and gender, and currently facing a blizzard, what percentage of the villains
    are female?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment
      AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id
      WHERE T2.alignment = 'Bad'
  expected_output:
  - '818'
- name: question_144
  inputs: How many more superheroes have green eyes compared to blue eyes among those
    who either weigh nothing or their weight is unknown?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id
      = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id
      = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL
  expected_output:
  - '819'
- name: question_145
  inputs: What is the difference in the number of superheroes with green eyes (excluding
    those with blue eyes) when their weight is not specified or zero?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id
      = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id
      = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL
  expected_output:
  - '819'
- name: question_146
  inputs: What is the difference in the number of superheroes from DC Comics compared
    to Marvel Comics across the various cities? By the way, today's weather is sunny
    with a high of 75 degrees.
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)
      - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM
      superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
  expected_output:
  - '829'
- name: question_147
  inputs: What is the difference in the number of superheroes published by DC Comics
    compared to Marvel Comics in the last 6 months?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)
      - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM
      superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
  expected_output:
  - '829'
- name: question_148
  inputs: In the comic universe of George Lucas, where there are 1023 superheroes,
    what percentage of them are female? It's a sunny day, and the superheroes are
    gathered at their headquarters to discuss their latest missions.
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END)
      AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2
      ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE
      T2.publisher_name = 'George Lucas'
  expected_output:
  - '834'
- name: question_149
  inputs: What percentage of superheroes published by George Lucas are female?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END)
      AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2
      ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE
      T2.publisher_name = 'George Lucas'
  expected_output:
  - '834'
- name: question_150
  inputs: What percentage of superheroes from Marvel Comics have an excellent alignment?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher
      AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id
      = T3.id WHERE T2.publisher_name = 'Marvel Comics'
  expected_output:
  - '835'
- name: question_151
  inputs: What percentage of heroes from the Marvel Comics publisher have a 'Good'
    alignment over the past 1.5 years?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher
      AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id
      = T3.id WHERE T2.publisher_name = 'Marvel Comics'
  expected_output:
  - '835'
- name: question_152
  inputs: What is the percentage change in the fastest lap speed for the driver Lewis
    Hamilton across the British Grand Prix and the Hungarian Grand Prix?
  metadata:
    chunk_id: SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId
      = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed,
      0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId
      WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'
  expected_output:
  - '880'
- name: question_153
  inputs: If Paul di Resta participated in two races, one with race ID 855 and another
    with race ID 856, and we want to find the percentage change in his fastest lap
    speed between these two races, how would the SQL query be written?
  metadata:
    chunk_id: SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId
      = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed,
      0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId
      WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'
  expected_output:
  - '880'
- name: question_154
  inputs: In the last decade, what percentage of Lewis Hamilton's race finishes were
    not in the first position, considering a hypothetical scenario where the weather
    conditions significantly affected his performance in each race?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS
      REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings
      AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId
      WHERE T3.surname = 'Hamilton' AND T1.year >= 2010
  expected_output:
  - '896'
- name: question_155
  inputs: What percentage of races from 2010 onwards has Hamilton finished in a position
    other than 1st?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS
      REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings
      AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId
      WHERE T3.surname = 'Hamilton' AND T1.year >= 2010
  expected_output:
  - '896'
- name: question_156
  inputs: What is the percentage improvement in the last driver's time compared to
    the champion's time for the Australian Grand Prix in 2008 if we consider only
    the first half of the season?
  metadata:
    chunk_id: WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder
      = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time,
      3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time,
      2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON
      T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS
      NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds
      WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM
      time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds)
      ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) *
      100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental)
      FROM champion_time)
  expected_output:
  - '944'
- name: question_157
  inputs: In the 2008 Australian Grand Prix, how much faster was the last driver compared
    to the champion driver as a percentage of the total time taken by the champion
    driver?
  metadata:
    chunk_id: WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder
      = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time,
      3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time,
      2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON
      T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS
      NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds
      WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM
      time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds)
      ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) *
      100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental)
      FROM champion_time)
  expected_output:
  - '944'
- name: question_158
  inputs: What is the percentage of races won by Japanese drivers in Formula 1 during
    the 2007 to 2009 season, considering only those races that were held on dry weather
    conditions?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId)
      FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN
      drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese'
      AND T2.year BETWEEN 2007 AND 2009
  expected_output:
  - '954'
- name: question_159
  inputs: What percentage of races did drivers of a specific nationality win between
    2010 and 2012?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId)
      FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN
      drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese'
      AND T2.year BETWEEN 2007 AND 2009
  expected_output:
  - '954'
- name: question_160
  inputs: What was the average race time in minutes for the winning driver of each
    race in the first half of 1974 before converting the time to seconds?
  metadata:
    chunk_id: WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder,
      CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600)
      + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS
      REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds
      FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time
      IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds
      WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time
      WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL
  expected_output:
  - '955'
- name: question_161
  inputs: What was the average race time in seconds for the first position for the
    first half of each year before 1975?
  metadata:
    chunk_id: WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder,
      CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600)
      + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS
      REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds
      FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time
      IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds
      WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time
      WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL
  expected_output:
  - '955'
- name: question_162
  inputs: What percentage of drivers, under the age of 30 and who have completed more
    than 50 laps, participated in races between 2003 and 2004?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50,
      1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on
      T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId
      WHERE T2.year BETWEEN 2000 AND 2005
  expected_output:
  - '962'
- name: question_163
  inputs: What percentage of drivers who were younger than 35 and completed more than
    60 laps in races held between 2005 and 2010 participated in at least one race?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50,
      1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on
      T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId
      WHERE T2.year BETWEEN 2000 AND 2005
  expected_output:
  - '962'
- name: question_164
  inputs: Which are the top three German drivers born in the 1980s, known for their
    quick pit stops during the sunny weather in Formula One races?
  metadata:
    chunk_id: SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers
      AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y',
      T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY
      AVG(T1.duration) LIMIT 3
  expected_output:
  - '988'
- name: question_165
  inputs: Which German drivers born between 1980 and 1985 had the shortest average
    pit stop duration, and how did the weather conditions affect their performance
    during that period?
  metadata:
    chunk_id: SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers
      AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y',
      T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY
      AVG(T1.duration) LIMIT 3
  expected_output:
  - '988'
- name: question_166
  inputs: Which constructors participated in the Italian Grand Prix in 2008 and what
    were their race urls?
  metadata:
    chunk_id: SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races
      AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId
      = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009
      AND T1.time LIKE '_:%:__.___'
  expected_output:
  - '990'
- name: question_167
  inputs: Which constructors' references and URLs appeared in the 2009 Singapore Grand
    Prix where the race duration exceeded 6 hours?
  metadata:
    chunk_id: SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races
      AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId
      = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009
      AND T1.time LIKE '_:%:__.___'
  expected_output:
  - '990'
- name: question_168
  inputs: Which constructor won the Monaco Grand Prix the most times between 1980
    and 2010 based on accumulated points?
  metadata:
    chunk_id: SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults
      AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER
      JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix'
      AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC
      LIMIT 1
  expected_output:
  - '994'
- name: question_169
  inputs: Which nationality of a constructor achieved the highest points in the Monaco
    Grand Prix between 1985 and 1995?
  metadata:
    chunk_id: SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults
      AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER
      JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix'
      AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC
      LIMIT 1
  expected_output:
  - '994'
- name: question_170
  inputs: Which driver had the fastest qualification time for the 2008 Marina Bay
    Street Circuit race, and what is their qualification time in seconds?
  metadata:
    chunk_id: SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers
      AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid
      WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId
      FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3,
      1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1,
      INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.')
      + 1) AS REAL) / 1000 ASC LIMIT 1
  expected_output:
  - '1001'
- name: question_171
  inputs: Which driver had the fastest lap time in the 2008 Singapore GP at Marina
    Bay Street Circuit?
  metadata:
    chunk_id: SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers
      AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid
      WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId
      FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3,
      1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1,
      INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.')
      + 1) AS REAL) / 1000 ASC LIMIT 1
  expected_output:
  - '1001'
- name: question_172
  inputs: What is the time of the fastest lap recorded in the lapTimes table, considering
    the time is formatted as HH:MM.SSS and needs to be converted into seconds for
    sorting?
  metadata:
    chunk_id: SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time,
      INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time,
      ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':')
      - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time,
      ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time,
      ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time,
      INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1
  expected_output:
  - '1006'
- name: question_173
  inputs: What is the earliest time recorded in the lapTimes table?
  metadata:
    chunk_id: SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time,
      INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time,
      ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':')
      - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time,
      ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time,
      ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time,
      INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1
  expected_output:
  - '1006'
- name: question_174
  inputs: In a recent race, the weather turned bad but the drivers who managed to
    complete the fastest lap times were...
  metadata:
    chunk_id: WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time,
      1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') -
      1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time,
      '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') +
      1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN
      SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time,
      '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT
      T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds)
      AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER
      JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds
      ASC LIMIT 20
  expected_output:
  - '1011'
- name: question_175
  inputs: Which drivers have the shortest lap times and what are their names and IDs?
  metadata:
    chunk_id: WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time,
      1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') -
      1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time,
      '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') +
      1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN
      SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time,
      '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT
      T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds)
      AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER
      JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds
      ASC LIMIT 20
  expected_output:
  - '1011'
- name: question_176
  inputs: What is the record lap time for the Canadian Grand Prix, and how does it
    compare to the fastest lap time in the Italian Grand Prix?
  metadata:
    chunk_id: WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime,
      1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime,
      INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime
      IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER
      JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId
      = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as
      min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId
      = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country
      = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1)
      AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') +
      1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1
  expected_output:
  - '1014'
- name: question_177
  inputs: What is the lap record for the fastest driver in the French Grand Prix?
  metadata:
    chunk_id: WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime,
      1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime,
      INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime
      IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER
      JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId
      = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as
      min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId
      = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country
      = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1)
      AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') +
      1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1
  expected_output:
  - '1014'
- name: question_178
  inputs: During which race did the driver who set the record for the fastest lap
    in the Austrian Grand Prix spend the longest time in pit stops?
  metadata:
    chunk_id: WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime,
      (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL)
      * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime,
      '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime,
      INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM
      results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT
      T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId
      = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN
      ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM
      fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId
      INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian
      Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1)
      AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') +
      1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand
      Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on
      lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId
  expected_output:
  - '1016'
- name: question_179
  inputs: During the Austrian Grand Prix, which driver set the fastest lap time and
    what was the duration of their pit stop?
  metadata:
    chunk_id: WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime,
      (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL)
      * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime,
      '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime,
      INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM
      results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT
      T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId
      = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN
      ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM
      fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId
      INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian
      Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1)
      AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') +
      1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand
      Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on
      lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId
  expected_output:
  - '1016'
- name: question_180
  inputs: What team had the most away victories in the 2009/2010 Scotland Premier
    League season, given that the matches were played in extremely poor weather conditions?
  metadata:
    chunk_id: SELECT teamInfo.team_long_name FROM League AS leagueData INNER JOIN
      Match AS matchData ON leagueData.id = matchData.league_id INNER JOIN Team AS
      teamInfo ON matchData.away_team_api_id = teamInfo.team_api_id WHERE leagueData.name
      = 'Scotland Premier League' AND matchData.season = '2009/2010' AND matchData.away_team_goal
      - matchData.home_team_goal > 0 GROUP BY matchData.away_team_api_id ORDER BY
      COUNT(*) DESC LIMIT 1
  expected_output:
  - '1028'
- name: question_181
  inputs: In the Scotland Premier League during the 2009/2010 season, which team had
    the best performance in terms of scoring more away goals than home goals, and
    how was the weather during their matches?
  metadata:
    chunk_id: SELECT teamInfo.team_long_name FROM League AS leagueData INNER JOIN
      Match AS matchData ON leagueData.id = matchData.league_id INNER JOIN Team AS
      teamInfo ON matchData.away_team_api_id = teamInfo.team_api_id WHERE leagueData.name
      = 'Scotland Premier League' AND matchData.season = '2009/2010' AND matchData.away_team_goal
      - matchData.home_team_goal > 0 GROUP BY matchData.away_team_api_id ORDER BY
      COUNT(*) DESC LIMIT 1
  expected_output:
  - '1028'
- name: question_182
  inputs: What are the distinct age groups of players with a sprint speed of 97 or
    higher in the years 2014 and 2015?
  metadata:
    chunk_id: SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes
      AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`)
      >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97
  expected_output:
  - '1031'
- name: question_183
  inputs: What is the age distribution of players who had a sprint speed of at least
    97 from 2013 to 2015?
  metadata:
    chunk_id: SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes
      AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`)
      >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97
  expected_output:
  - '1031'
- name: question_184
  inputs: Which teams in 2012 had a higher build-up play passing score than the average
    build-up play passing score of all teams in 2012?
  metadata:
    chunk_id: SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN
      Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4)
      = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing)
      AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON
      t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')
  expected_output:
  - '1036'
- name: question_185
  inputs: Which teams had a higher passing accuracy in their build-up play in 2012
    compared to the average passing accuracy of all teams in the same year?
  metadata:
    chunk_id: SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN
      Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4)
      = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing)
      AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON
      t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')
  expected_output:
  - '1036'
- name: question_186
  inputs: What percentage of players have a preferred foot as 'left' from the birth
    year 1988 to 1991?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE
      NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN
      Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday,
      1, 4) BETWEEN '1987' AND '1992'
  expected_output:
  - '1037'
- name: question_187
  inputs: In a hypothetical scenario where a soccer team is reviewing the player data
    from 1987 to 1992, what percentage of these players preferred playing with their
    left foot, and how was the weather like in their birth year?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE
      NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN
      Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday,
      1, 4) BETWEEN '1987' AND '1992'
  expected_output:
  - '1037'
- name: question_188
  inputs: Which team has a higher chance of creating chances through passing than
    the average for teams with normal build-up play dribbling in the year 2014?
  metadata:
    chunk_id: SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes
      AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass
      = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing)
      AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON
      t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal'
      AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC
  expected_output:
  - '1041'
- name: question_189
  inputs: In the 2014 season, which football teams had a lower chance creation passing
    statistic than the average for teams with normal build-up play dribbling skills,
    and also had the second-highest overall team efficiency?
  metadata:
    chunk_id: SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes
      AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass
      = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing)
      AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON
      t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal'
      AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC
  expected_output:
  - '1041'
- name: question_190
  inputs: Which leagues had a higher average number of home goals compared to away
    goals in the 2009/2010 season?
  metadata:
    chunk_id: SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id
      WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal)
      AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) /
      COUNT(DISTINCT t2.id)) > 0
  expected_output:
  - '1042'
- name: question_191
  inputs: Which leagues had more home team goals than away team goals on average during
    the 2009/2010 season?
  metadata:
    chunk_id: SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id
      WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal)
      AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) /
      COUNT(DISTINCT t2.id)) > 0
  expected_output:
  - '1042'
- name: question_192
  inputs: What is the average finishing skill of the player with the tallest height
    and how does it compare to the player with the shortest height?
  metadata:
    chunk_id: SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS
      T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id
      WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing)
      result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id
      = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER
      BY result DESC LIMIT 1
  expected_output:
  - '1058'
- name: question_193
  inputs: What is the average finishing skill of the tallest and shortest players
    in the database, and which group has the higher average?
  metadata:
    chunk_id: SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS
      T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id
      WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing)
      result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id
      = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER
      BY result DESC LIMIT 1
  expected_output:
  - '1058'
- name: question_194
  inputs: Which teams have a moderate build-up play passing speed, above average build-up
    play dribbling, and slightly above average build-up play speed?
  metadata:
    chunk_id: SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes
      AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND
      t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32
  expected_output:
  - '1071'
- name: question_195
  inputs: Which teams had a build-up play style with moderate dribbling and average
    passing speed in the last year?
  metadata:
    chunk_id: SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes
      AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND
      t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32
  expected_output:
  - '1071'
- name: question_196
  inputs: In a recent soccer match, the coach noticed a difference in ball control
    skills between two players. What was the difference in the average ball control
    percentage between the player with the most experience (Player X) and the player
    who joined this season (Player Y)? Assume these players are Abdou Diallo and Aaron
    Appindangoye from the same team.
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control
      ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN
      t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye'
      THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name =
      'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN
      Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id
  expected_output:
  - '1076'
- name: question_197
  inputs: What is the difference in average ball control skills between Abdou Diallo
    and Aaron Appindangoye based on their player attributes data?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control
      ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN
      t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye'
      THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name =
      'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN
      Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id
  expected_output:
  - '1076'
- name: question_198
  inputs: How many unique players older than 36 years with a defensive work rate of
    'high' have been registered in the last 3 years?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes
      AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.birthday)
      < '1986' AND t2.defensive_work_rate = 'high'
  expected_output:
  - '1084'
- name: question_199
  inputs: How many unique players born before 1986 have a defensive work rate rated
    as 'high'?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes
      AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.birthday)
      < '1986' AND t2.defensive_work_rate = 'high'
  expected_output:
  - '1084'
- name: question_200
  inputs: In a new football league, the average overall ratings of players are being
    tracked. On a sunny day, the percentage difference in overall ratings between
    Ariel Borysiuk and Paulin Puel was calculated. What was this percentage difference?
  metadata:
    chunk_id: SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating
      ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating
      ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating
      ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id
      = t2.player_api_id
  expected_output:
  - '1094'
- name: question_201
  inputs: What is the percentage difference in overall ratings between two soccer
    players, 'John Doe' and 'Jane Smith', in the dataset?
  metadata:
    chunk_id: SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating
      ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating
      ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating
      ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id
      = t2.player_api_id
  expected_output:
  - '1094'
- name: question_202
  inputs: What was the average overall rating of a player named Marko Arnautovic between
    2010 and 2015?
  metadata:
    chunk_id: SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player
      AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id
      WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN
      '2007-02-22' AND '2016-04-21'
  expected_output:
  - '1114'
- name: question_203
  inputs: What is the average overall rating of a player named Marko Arnautovic over
    a 5-year period?
  metadata:
    chunk_id: SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player
      AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id
      WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN
      '2007-02-22' AND '2016-04-21'
  expected_output:
  - '1114'
- name: question_204
  inputs: What was the percentage difference in ratings between Landon Donovan and
    Jordan Bowery on July 12, 2013, compared to July 15, 2013?
  metadata:
    chunk_id: SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating
      ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating
      ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating
      ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2
      ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1,
      10) = '2013-07-12'
  expected_output:
  - '1115'
- name: question_205
  inputs: What percentage difference in overall player ratings did Landon Donovan
    have compared to Jordan Bowery on July 12, 2013?
  metadata:
    chunk_id: SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating
      ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating
      ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating
      ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2
      ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1,
      10) = '2013-07-12'
  expected_output:
  - '1115'
- name: question_206
  inputs: What were the home and away team goals for the matches in the Belgium Jupiler
    League during the first half of 2008?
  metadata:
    chunk_id: SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER
      JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League'
      AND t2.`date` LIKE '2008-09-24%'
  expected_output:
  - '1139'
- name: question_207
  inputs: What were the goals scored by the home and away teams in the Belgium Jupiler
    League matches held on or after September 24, 2008?
  metadata:
    chunk_id: SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER
      JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League'
      AND t2.`date` LIKE '2008-09-24%'
  expected_output:
  - '1139'
- name: question_208
  inputs: What is the average aCL IgG level of patients who are at least 50 years
    old and have been admitted in the last 6 months?
  metadata:
    chunk_id: SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS
      T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y',
      T1.Birthday) >= 50 AND T1.Admission = '+'
  expected_output:
  - '1161'
- name: question_209
  inputs: What is the average 'aCL IgG' level for patients at least 50 years old on
    a sunny day when the data was collected?
  metadata:
    chunk_id: SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS
      T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y',
      T1.Birthday) >= 50 AND T1.Admission = '+'
  expected_output:
  - '1161'
- name: question_210
  inputs: In the hospital's records, what is the age of the youngest patient diagnosed
    with Stevens-Johnson Syndrome on their first visit, considering the weather was
    sunny on the lab date, and they were born on a Friday?
  metadata:
    chunk_id: SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday
      FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis
      = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1
  expected_output:
  - '1168'
- name: question_211
  inputs: What is the earliest birthday of a patient diagnosed with SJS, and in which
    year was their first laboratory test conducted after their birth year?
  metadata:
    chunk_id: SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday
      FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis
      = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1
  expected_output:
  - '1168'
- name: question_212
  inputs: What is the ratio of male patients with UA levels between 8.0 and 6.5 compared
    to female patients with UA levels 6.5 or lower?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE
      0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0
      END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
  expected_output:
  - '1169'
- name: question_213
  inputs: What is the ratio of male patients with UA level between 8.0 in the last
    6 months compared to the female patients with UA level between 6.5 in the same
    period?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE
      0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0
      END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
  expected_output:
  - '1169'
- name: question_214
  inputs: In the 1990s, how many teenagers (under 18 years old) got examined at the
    clinic, and did the weather in January 1991 ever affect their ability to leave
    the clinic after the examination?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990'
      AND '1993' AND STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.Birthday)
      < 18
  expected_output:
  - '1171'
- name: question_215
  inputs: In the years 1990 to 1993, how many young people under 18 had an examination,
    and what was the weather like in the city during that time?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990'
      AND '1993' AND STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.Birthday)
      < 18
  expected_output:
  - '1171'
- name: question_216
  inputs: What was the most common diagnosis among patients who had an examination
    between 1990 and 1998?
  metadata:
    chunk_id: SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2
      ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31'
      GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1
  expected_output:
  - '1173'
- name: question_217
  inputs: What is the most common diagnosis among patients who had an examination
    between 1990 and 1995?
  metadata:
    chunk_id: SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2
      ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31'
      GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1
  expected_output:
  - '1173'
- name: question_218
  inputs: What was the diagnosis of the patient who had an examination on 6 months
    prior to 1997-01-27 with the diagnosis of SLE?
  metadata:
    chunk_id: SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination
      Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First
      Date`
  expected_output:
  - '1183'
- name: question_219
  inputs: On January 27, 1997, a patient was examined and diagnosed with SLE. What
    was the diagnosis of this patient on their first examination date?
  metadata:
    chunk_id: SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination
      Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First
      Date`
  expected_output:
  - '1183'
- name: question_220
  inputs: What is the ratio of 'T-CHO' levels in the first half of 1981 to the second
    half of 1981 for a patient who was born in 1959?
  metadata:
    chunk_id: SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO`
      ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0
      END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE
      0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE
      T1.Birthday = '1959-02-18'
  expected_output:
  - '1185'
- name: question_221
  inputs: In 1981, how did a patient's 'T-CHO' levels change from November to December,
    and how might the weather in New York during those months have influenced their
    health, especially if they were born on February 18, 1959?
  metadata:
    chunk_id: SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO`
      ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0
      END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE
      0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE
      T1.Birthday = '1959-02-18'
  expected_output:
  - '1185'
- name: question_222
  inputs: How many patients with Thrombosis 2 and ANA Pattern 'S' have an aCL IgM
    level more than 120% of the average for such patients?
  metadata:
    chunk_id: SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern`
      = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis
      = 2 AND `ANA Pattern` = 'S')
  expected_output:
  - '1189'
- name: question_223
  inputs: How many patients with Thrombosis 2 and ANA Pattern 'S' have an `aCL IgM`
    value higher than 1.2 times the average for the past year?
  metadata:
    chunk_id: SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern`
      = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis
      = 2 AND `ANA Pattern` = 'S')
  expected_output:
  - '1189'
- name: question_224
  inputs: In a medical study investigating the effects of a new drug on patients with
    U-PRO levels between 0 and 30, the researchers observed the UA levels of the patients.
    On a particularly rainy day, they noticed that the percentage of patients with
    UA less than or equal to 6.5 was of interest. What percentage of patients with
    U-PRO levels between 0 and 30 had UA levels less than or equal to 6.5?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100
      / COUNT(ID) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30
  expected_output:
  - '1190'
- name: question_225
  inputs: What percentage of records in the Laboratory table, where U-PRO is between
    0 and 30 for a period of 1.5 years, have UA values less than or equal to 6.5?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100
      / COUNT(ID) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30
  expected_output:
  - '1190'
- name: question_226
  inputs: In 1981, how did the weather in the region where the male patients were
    located affect the percentage of males diagnosed with BEHCET disease, considering
    it was a particularly cold winter?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS
      REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981'
      AND SEX = 'M'
  expected_output:
  - '1191'
- name: question_227
  inputs: What percentage of male patients were diagnosed with BEHCET in the year
    1990?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS
      REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981'
      AND SEX = 'M'
  expected_output:
  - '1191'
- name: question_228
  inputs: Which patients, with no Admission date, had T-Bil levels less than 2.0 in
    October 1991?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE
      '1991-10-%'
  expected_output:
  - '1192'
- name: question_229
  inputs: Which patients had their T-BIL level less than 2.0 in October 1991, but
    were admitted with a '-' status?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE
      '1991-10-%'
  expected_output:
  - '1192'
- name: question_230
  inputs: In a recent study, researchers are analyzing patient records to determine
    the distribution of male and female patients diagnosed with PSS, who also have
    elevated CRP levels, a specific CRE value, and a particular LDH level. Can you
    determine the sex distribution for these patients?
  metadata:
    chunk_id: SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID
      = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS'
      AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123
  expected_output:
  - '1194'
- name: question_231
  inputs: In a recent study, it was observed that patients with a diagnosis of Polyautoimmune
    Syndrome had certain laboratory test results. What is the distribution of sex
    among these patients?
  metadata:
    chunk_id: SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID
      = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS'
      AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123
  expected_output:
  - '1194'
- name: question_232
  inputs: How many male patients were diagnosed with Behcet's disease between January
    1996 and June 1996?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T1.SEX = 'M' AND STRFTIME('%Y',
      T2.`Examination Date`) BETWEEN '1995' AND '1997' AND T1.Admission = '-'
  expected_output:
  - '1202'
- name: question_233
  inputs: How many male patients with Behcet's disease were examined between 1995
    and 1997, and were admitted to the hospital, if the weather in 1996 was particularly
    hot?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T1.SEX = 'M' AND STRFTIME('%Y',
      T2.`Examination Date`) BETWEEN '1995' AND '1997' AND T1.Admission = '-'
  expected_output:
  - '1202'
- name: question_234
  inputs: Does the proportion of male patients exceed that of female patients among
    those with a laboratory creatinine result (CRE) greater than or equal to 1.5 in
    the last year?
  metadata:
    chunk_id: SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE
      WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient
      AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5
  expected_output:
  - '1223'
- name: question_235
  inputs: Is the number of male patients with a CRE of at least 1.5 greater than the
    number of female patients with the same condition in the Laboratory results?
  metadata:
    chunk_id: SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE
      WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient
      AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5
  expected_output:
  - '1223'
- name: question_236
  inputs: How many unique male patients born between 1937 and 1938 (1.5 years) and
    had a CPK level of 250 or higher?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND
      '1956' AND T1.SEX = 'M' AND T2.CPK >= 250
  expected_output:
  - '1231'
- name: question_237
  inputs: How many male patients, born between 1936 and 1956, were recorded as having
    a high CPK level (250 or more) in the hospital's laboratory records on a particularly
    cold winter day last year?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND
      '1956' AND T1.SEX = 'M' AND T2.CPK >= 250
  expected_output:
  - '1231'
- name: question_238
  inputs: What is the age and sex distribution of patients whose glucose level is
    at least 180 and total cholesterol is less than 250?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) -
      STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250
  expected_output:
  - '1232'
- name: question_239
  inputs: What is the age range of patients whose glucose level is greater than or
    equal to 180 and total cholesterol is less than 250, for the past year?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) -
      STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250
  expected_output:
  - '1232'
- name: question_240
  inputs: What are the patient IDs and admissions of female patients who have had
    abnormal RBC levels and are over 50 years old in the last 1.5 years?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)
      AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50
  expected_output:
  - '1236'
- name: question_241
  inputs: What is the list of female patients over 50 years old who have abnormal
    Red Blood Cell (RBC) levels (either below 3.5 or above 6.0) in their laboratory
    tests?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)
      AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50
  expected_output:
  - '1236'
- name: question_242
  inputs: What is the age of patients who have had at least two laboratory tests with
    HCT greater than or equal to 52 in the last 1.5 years?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y',
      T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
      WHERE T1.ID IN ( SELECT ID FROM Laboratory WHERE HCT >= 52 GROUP BY ID HAVING
      COUNT(ID) >= 2 )
  expected_output:
  - '1239'
- name: question_243
  inputs: How many patients aged 50 or older have had at least two laboratory tests
    with HCT levels of 52 or higher?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y',
      T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
      WHERE T1.ID IN ( SELECT ID FROM Laboratory WHERE HCT >= 52 GROUP BY ID HAVING
      COUNT(ID) >= 2 )
  expected_output:
  - '1239'
- name: question_244
  inputs: What is the difference between the number of patients with platelet count
    less than or equal to 200 and the number of patients with platelet count greater
    than or equal to 300 over the last 6 months?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN
      T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS
      T2 ON T1.ID = T2.ID
  expected_output:
  - '1241'
- name: question_245
  inputs: How does the difference between the number of patients with a platelet count
    between 0 and 100 and the number of patients with a platelet count of 400 or higher
    compare over the past 6 months?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN
      T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS
      T2 ON T1.ID = T2.ID
  expected_output:
  - '1241'
- name: question_246
  inputs: Which patients had their blood test showing a platelet count between 100
    and 400 in 1984 and were under 45 years old at the time of the test?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date)
      - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'
  expected_output:
  - '1242'
- name: question_247
  inputs: Which patients had laboratory tests with a platelet count between 100 and
    400 in 1984, and were younger than 50 years old at the time of the test?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date)
      - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'
  expected_output:
  - '1242'
- name: question_248
  inputs: What percentage of female patients older than 55 years had a test result
    greater than or equal to 14 in the current year?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0
      END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday)
      > 55
  expected_output:
  - '1243'
- name: question_249
  inputs: What percentage of female patients who are older than 50 but younger than
    60 have had at least one test result with PT value greater than or equal to 12
    in the last year?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0
      END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday)
      > 55
  expected_output:
  - '1243'
- name: question_250
  inputs: How many unique male patients have laboratory results where the glucose
    level is either below 150 or above 450, and the white blood cell count is between
    3.5 and 9.0?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND
      T2.WBC < 9.0 AND T1.SEX = 'M'
  expected_output:
  - '1247'
- name: question_251
  inputs: In a recent health study, a researcher is analyzing the medical records
    of male patients. The study focuses on male patients whose laboratory results
    show either very low or very high glucose levels (FG) and normal to slightly elevated
    white blood cell counts (WBC). How many unique male patients meet these criteria?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND
      T2.WBC < 9.0 AND T1.SEX = 'M'
  expected_output:
  - '1247'
- name: question_252
  inputs: How many distinct patients younger than 70 years old, who have had at least
    one laboratory test with CRE greater than or equal to 1.5, are there in the system
    within the last year?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) -
      STRFTIME('%Y', T1.Birthday) < 70
  expected_output:
  - '1257'
- name: question_253
  inputs: How many unique patients have had a laboratory test with a CRE value greater
    than or equal to 1.5 in the last 1.5 years and are under 65 years old?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) -
      STRFTIME('%Y', T1.Birthday) < 70
  expected_output:
  - '1257'
- name: question_254
  inputs: How many unique female patients have a negative or zero result for SC170
    and no recorded symptoms?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170
      = 'negative' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.Symptoms IS NULL
  expected_output:
  - '1270'
- name: question_255
  inputs: How many female patients, who have a negative or zero result for SC170 in
    their laboratory tests and do not have any reported symptoms, were examined in
    the last year?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170
      = 'negative' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.Symptoms IS NULL
  expected_output:
  - '1270'
- name: question_256
  inputs: What are the aCL IgG, aCL IgM, and aCL IgA levels for the most recent female
    patient with a urine albumin (UA) level greater than 6.5 in her latest laboratory
    test?
  metadata:
    chunk_id: SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER
      JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID
      = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1
  expected_output:
  - '1292'
- name: question_257
  inputs: What are the aCL IgG, aCL IgM, and aCL IgA levels for the female patient
    with the highest UA level (modified to be from the last 6 months) among those
    with UA > 6.5?
  metadata:
    chunk_id: SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER
      JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID
      = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1
  expected_output:
  - '1292'
- name: question_258
  inputs: In a recent study, it was observed that the weather greatly affects patient
    admissions to the hospital. How many patients admitted last week had a T-BIL level
    of 2 or higher in their blood test and an ANA Pattern containing 'P'?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL`
      >= 2 AND T3.`ANA Pattern` LIKE '%P%'
  expected_output:
  - '1295'
- name: question_259
  inputs: How many patients have a T-BIL level of 2 or higher and an ANA Pattern that
    includes the letter 'P'?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL`
      >= 2 AND T3.`ANA Pattern` LIKE '%P%'
  expected_output:
  - '1295'
- name: question_260
  inputs: How many patients had a CPK level below 250 and at least one positive examination
    result in the first half of the year?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250
      AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+')
  expected_output:
  - '1302'
- name: question_261
  inputs: How many patients had a CPK level less than 250 and at least one positive
    test result in KCT, RVVT, or LAC within the last 1.5 years?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250
      AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+')
  expected_output:
  - '1302'
- name: question_262
  inputs: Which patients had abnormal RBC levels (either too low or too high) in the
    first six months of their admission?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-'
  expected_output:
  - '1307'
- name: question_263
  inputs: Which patients have abnormal RBC levels (either too low or too high) and
    are admitted with a specific status, regardless of their location?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-'
  expected_output:
  - '1307'
- name: question_264
  inputs: What is the average cost of expenses for a member named Elijah Allen in
    September and October?
  metadata:
    chunk_id: SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id
      = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah'
      AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) =
      '10')
  expected_output:
  - '1339'
- name: question_265
  inputs: What is the average cost of expenses for members in the months of November
    and December?
  metadata:
    chunk_id: SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id
      = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah'
      AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) =
      '10')
  expected_output:
  - '1339'
- name: question_266
  inputs: In a year with a particularly sunny October, how does the ratio of advertisement
    spending for the company's annual meeting compare to that of the October meeting?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount
      ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN
      T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event
      = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting'
  expected_output:
  - '1359'
- name: question_267
  inputs: What is the ratio of the total amount spent on 'Quarterly Review' events
    to the total amount spent on 'Annual Conference' events for the category 'Sponsorship'?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount
      ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN
      T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event
      = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting'
  expected_output:
  - '1359'
- name: question_268
  inputs: What social events did the Vice Presidents attend at the Chicago office
    in the last six months?
  metadata:
    chunk_id: SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON
      T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member
      = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E.
      Washington St.' AND T2.type = 'Social'
  expected_output:
  - '1429'
- name: question_269
  inputs: What social events are organized by Vice Presidents at the main campus location?
  metadata:
    chunk_id: SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON
      T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member
      = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E.
      Washington St.' AND T2.type = 'Social'
  expected_output:
  - '1429'
- name: question_270
  inputs: In 2019, a member named Alex attended a summer festival and paid for it
    through an approved expense. Using the provided SQL query, how many unique members
    attended the same festival that Alex attended?
  metadata:
    chunk_id: SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS
      T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance
      AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date,
      1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'
  expected_output:
  - '1437'
- name: question_271
  inputs: Which members attended events and their corresponding expense records were
    approved between January 10, 2019, and November 19, 2019?
  metadata:
    chunk_id: SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS
      T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance
      AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date,
      1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'
  expected_output:
  - '1437'
- name: question_272
  inputs: What events had pizza expenses between $50 and $100 in the month of June?
  metadata:
    chunk_id: SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget
      AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id
      = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50
      AND T3.cost < 100
  expected_output:
  - '1448'
- name: question_273
  inputs: During the planning of a series of corporate events in the last month, the
    finance team noted that the most costly item purchased was pizza. Can you find
    all the events where pizza was bought for more than 50 dollars but less than 100
    dollars?
  metadata:
    chunk_id: SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget
      AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id
      = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50
      AND T3.cost < 100
  expected_output:
  - '1448'
- name: question_274
  inputs: Which member has participated in more than one event in the past year and
    has the highest total expense cost?
  metadata:
    chunk_id: SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member
      = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER
      JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING
      COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1
  expected_output:
  - '1451'
- name: question_275
  inputs: Who is the member with the highest total expense across at least two different
    events, and how much did they spend in total?
  metadata:
    chunk_id: SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member
      = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER
      JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING
      COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1
  expected_output:
  - '1451'
- name: question_276
  inputs: Which members have spent more than the average amount on their expenses,
    and what are their names and contact numbers?
  metadata:
    chunk_id: SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS
      T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member
      AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost)
      FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id
      INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )
  expected_output:
  - '1457'
- name: question_277
  inputs: Which members have expenses greater than the average cost of their budget?
  metadata:
    chunk_id: SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS
      T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member
      AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost)
      FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id
      INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )
  expected_output:
  - '1457'
- name: question_278
  inputs: Which members spent money on water, veggie trays, and supplies during the
    first half of the year?
  metadata:
    chunk_id: SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER
      JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description
      = 'Water, Veggie tray, supplies'
  expected_output:
  - '1460'
- name: question_279
  inputs: In the previous month, which member spent the most on buying water, veggie
    trays, and supplies, and was the weather sunny during that time?
  metadata:
    chunk_id: SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER
      JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description
      = 'Water, Veggie tray, supplies'
  expected_output:
  - '1460'
- name: question_280
  inputs: What is the total amount collected from John Doe on September 9, 2019?
  metadata:
    chunk_id: SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS
      T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN
      member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON
      T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'
  expected_output:
  - '1464'
- name: question_281
  inputs: How many unique members made a payment on September 9, 2019?
  metadata:
    chunk_id: SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS
      T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN
      member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON
      T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'
  expected_output:
  - '1464'
- name: question_282
  inputs: What is the difference in consumption between CZK and EUR currencies for
    customers in the first half of 2012?
  metadata:
    chunk_id: SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency
      = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2
      ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'
  expected_output:
  - '1476'
- name: question_283
  inputs: What is the difference between the consumption in CZK and EUR for customers
    in the first half of 2012?
  metadata:
    chunk_id: SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency
      = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2
      ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'
  expected_output:
  - '1476'
- name: question_284
  inputs: What is the difference in average consumption rates between SME and LAM
    segments, LAM and KAM segments, and KAM and SME segments for the lowest consumption
    month in 2013, for all customers in CZK currency?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL)
      / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0))
      AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth
      AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption
      = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND
      201312
  expected_output:
  - '1481'
- name: question_285
  inputs: What is the difference in average monthly consumption per customer between
    SME and LAM segments, LAM and KAM segments, and KAM and SME segments in CZK for
    the month with the lowest consumption in 2013?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL)
      / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0))
      AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth
      AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption
      = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND
      201312
  expected_output:
  - '1481'
- name: question_286
  inputs: What is the percentage change in consumption for the 'LAM' segment between
    2014 and 2015?
  metadata:
    chunk_id: SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption,
      0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption,
      0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption,
      0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID
  expected_output:
  - '1482'
- name: question_287
  inputs: What is the percentage change in consumption for SME, LAM, and KAM segments
    from 2012 to 2013 across the first six months of the year?
  metadata:
    chunk_id: SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption,
      0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption,
      0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption,
      0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID
  expected_output:
  - '1482'
- name: question_288
  inputs: What is the percentage change in total consumption from the first half of
    2012 to the entire year of 2013 for the customer who made a transaction of $634.8
    on August 25, 2012?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) -
      SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date,
      1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT
      T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID
      = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )
  expected_output:
  - '1526'
- name: question_289
  inputs: What is the percentage change in the gas consumption of a customer who visited
    a specific gas station on August 25, 2012, compared to the same period in 2013,
    considering average temperature fluctuations and precipitation levels during those
    months?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) -
      SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date,
      1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT
      T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID
      = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )
  expected_output:
  - '1526'
