# yaml-language-server: $schema=questions_schema.json
cases:
- name: question_0
  inputs: How many distinct football players from a specific country were born before
    1990 and have a high defensive work rate?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes
      AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.birthday)
      < '1986' AND t2.defensive_work_rate = 'high'
  expected_output:
  - '1084'
- name: question_1
  inputs: How many distinct players were born within the first half of the 1980s and
    have a high defensive work rate?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes
      AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.birthday)
      < '1986' AND t2.defensive_work_rate = 'high'
  expected_output:
  - '1084'
- name: question_2
  inputs: During an international soccer tournament held under unpredictable weather
    conditions, how does the average ball control of one player compare to that of
    another when evaluating their overall performance?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control
      ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN
      t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye'
      THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name =
      'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN
      Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id
  expected_output:
  - '1076'
- name: question_3
  inputs: During a recent championship match held in the pouring rain, how does the
    average ball control of one prominent defender compare to that of another equally
    renowned defender, based on their performance statistics?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control
      ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN
      t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye'
      THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name =
      'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN
      Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id
  expected_output:
  - '1076'
- name: question_4
  inputs: In light of the upcoming regional soccer tournament, which teams are known
    for their unique build-up play styles, characterized by a specific balance in
    speed, dribbling, and passing?
  metadata:
    chunk_id: SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes
      AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND
      t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32
  expected_output:
  - '1071'
- name: question_5
  inputs: During an intense soccer match where fans were buzzing with excitement,
    which teams are known for their particular build-up play attributes, specifically
    having a speed of 31, dribbling skill of 53, and passing ability of 32?
  metadata:
    chunk_id: SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes
      AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND
      t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32
  expected_output:
  - '1071'
- name: question_6
  inputs: What is the average finishing skill of football players with the highest
    and lowest body mass index (BMI), and which one is greater?
  metadata:
    chunk_id: SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS
      T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id
      WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing)
      result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id
      = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER
      BY result DESC LIMIT 1
  expected_output:
  - '1058'
- name: question_7
  inputs: How did the gas consumption for a specific customer in 2014 compare to that
    in 2015, based on their transactions at gas stations?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) -
      SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date,
      1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT
      T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID
      = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )
  expected_output:
  - '1526'
- name: question_8
  inputs: How did the gas consumption for a specific customer in Canada differ between
    the years 2012 and 2013, based on their transactions at gas stations?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) -
      SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date,
      1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT
      T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID
      = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )
  expected_output:
  - '1526'
- name: question_9
  inputs: What is the percentage change in consumption for each customer segment (SME,
    LAM, KAM) over a six-month period, comparing the first half of the current year
    to the first half of the previous year?
  metadata:
    chunk_id: SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption,
      0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption,
      0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption,
      0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID
  expected_output:
  - '1482'
- name: question_10
  inputs: How did the consumption for the SME, LAM, and KAM customer segments change
    over a period of 1.5 years compared to the previous 6 months?
  metadata:
    chunk_id: SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption,
      0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption,
      0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption,
      0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0))
      AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption,
      0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID
  expected_output:
  - '1482'
- name: question_11
  inputs: How do the average consumptions differ among the SME, LAM, and KAM customer
    segments during a period of 6 months where the currency is in CZK and consumption
    is at its minimum?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL)
      / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0))
      AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth
      AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption
      = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND
      201312
  expected_output:
  - '1481'
- name: question_12
  inputs: During a year when a popular local music festival significantly impacted
    consumer behavior, how do the average consumptions of the SME, LAM, and KAM customer
    segments compare when only considering the minimum consumption records of that
    year?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL)
      / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0))
      AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption,
      0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth
      AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption
      = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND
      201312
  expected_output:
  - '1481'
- name: question_13
  inputs: In a league where player heights are variable, which group, the tallest
    or shortest players, has a higher average finishing skill over the past year?
  metadata:
    chunk_id: SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS
      T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id
      WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing)
      result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id
      = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER
      BY result DESC LIMIT 1
  expected_output:
  - '1058'
- name: question_14
  inputs: Which leagues had a higher average of home team goals compared to away team
    goals in the '2010/2011' season?
  metadata:
    chunk_id: SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id
      WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal)
      AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) /
      COUNT(DISTINCT t2.id)) > 0
  expected_output:
  - '1042'
- name: question_15
  inputs: During the winter of a particularly snowy year, which football leagues demonstrated
    a positive scoring trend by having an average of more home goals than away goals
    in their matches, but only in that specific season?
  metadata:
    chunk_id: SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id
      WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal)
      AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) /
      COUNT(DISTINCT t2.id)) > 0
  expected_output:
  - '1042'
- name: question_16
  inputs: In the year 2012, while a festival celebrating local traditions was taking
    place, how did the total consumption of customers in one currency compare to that
    of another currency based on the customer data available?
  metadata:
    chunk_id: SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency
      = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2
      ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'
  expected_output:
  - '1476'
- name: question_17
  inputs: Which football teams with a normal dribbling class have a chance creation
    passing below the average of similar teams over the last 18 months?
  metadata:
    chunk_id: SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes
      AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass
      = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing)
      AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON
      t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal'
      AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC
  expected_output:
  - '1041'
- name: question_18
  inputs: In a bustling city where the annual flower festival took place in 2012,
    how did the total consumption of services in one specified currency compare to
    another as recorded in the customer data outputs?
  metadata:
    chunk_id: SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency
      = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2
      ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'
  expected_output:
  - '1476'
- name: question_19
  inputs: Which teams displayed a normal dribbling class and had a chance creation
    passing rate lower than the average of teams with the same dribbling characteristics
    during the 2015 season?
  metadata:
    chunk_id: SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes
      AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass
      = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing)
      AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON
      t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal'
      AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC
  expected_output:
  - '1041'
- name: question_20
  inputs: What distinct first and last names of members received income related to
    events they attended within a six-month period?
  metadata:
    chunk_id: SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS
      T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN
      member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON
      T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'
  expected_output:
  - '1464'
- name: question_21
  inputs: During a football tournament held in the summer, where fans celebrated players'
    unique skills and talents, what percentage of players born between specific years
    are left-footed according to the latest team statistics?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE
      NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN
      Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday,
      1, 4) BETWEEN '1987' AND '1992'
  expected_output:
  - '1037'
- name: question_22
  inputs: What are the first and last names of members who attended events and the
    amounts they received approximately six months after a specific date?
  metadata:
    chunk_id: SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS
      T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN
      member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON
      T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'
  expected_output:
  - '1464'
- name: question_23
  inputs: What percentage of players born in a specified range of years have a left
    foot preference when considering players from a different country?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE
      NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN
      Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday,
      1, 4) BETWEEN '1987' AND '1992'
  expected_output:
  - '1037'
- name: question_24
  inputs: During the company's annual picnic, several supplies were purchased, including
    drinks and snacks. Could you tell me which members were responsible for the costs
    associated with the supplies purchased?
  metadata:
    chunk_id: SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER
      JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description
      = 'Water, Veggie tray, supplies'
  expected_output:
  - '1460'
- name: question_25
  inputs: Which teams had a build-up play passing statistic higher than the average
    during the first six months of 2012?
  metadata:
    chunk_id: SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN
      Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4)
      = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing)
      AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON
      t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')
  expected_output:
  - '1036'
- name: question_26
  inputs: What are the total costs associated with specific supplies incurred by members
    over the past year?
  metadata:
    chunk_id: SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER
      JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description
      = 'Water, Veggie tray, supplies'
  expected_output:
  - '1460'
- name: question_27
  inputs: What distinct team names achieved a build-up play passing rate higher than
    the average of all teams in the year 2015?
  metadata:
    chunk_id: SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN
      Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4)
      = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing)
      AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON
      t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')
  expected_output:
  - '1036'
- name: question_28
  inputs: Who are the members in the community that spend more than the average on
    expenses?
  metadata:
    chunk_id: SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS
      T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member
      AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost)
      FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id
      INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )
  expected_output:
  - '1457'
- name: question_29
  inputs: What are the ages of players from Brazil who achieved a sprint speed above
    the defined threshold between 2015 and 2018?
  metadata:
    chunk_id: SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes
      AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`)
      >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97
  expected_output:
  - '1031'
- name: question_30
  inputs: Which members have incurred expenses greater than the average cost of all
    expenses in the marketing budget?
  metadata:
    chunk_id: SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS
      T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member
      AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost)
      FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id
      INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )
  expected_output:
  - '1457'
- name: question_31
  inputs: During a recent charity gala, I discovered that some members actively participated
    in multiple events. Who was the member that spent the most on their expenses while
    having attended more than one event?
  metadata:
    chunk_id: SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member
      = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER
      JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING
      COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1
  expected_output:
  - '1451'
- name: question_32
  inputs: What are the ages of players who demonstrated a sprint speed of at least
    97 during the first half of 2014?
  metadata:
    chunk_id: SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes
      AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`)
      >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97
  expected_output:
  - '1031'
- name: question_33
  inputs: During a local community festival, organizers want to reward the member
    who has actively participated in more than one event while also contributing significantly
    to the expenses. Which member has the highest total expenses associated with multiple
    events in the community?
  metadata:
    chunk_id: SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member
      = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER
      JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING
      COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1
  expected_output:
  - '1451'
- name: question_34
  inputs: During a particularly rainy football season in Scotland, which team achieved
    the most away victories in the Premier League?
  metadata:
    chunk_id: SELECT teamInfo.team_long_name FROM League AS leagueData INNER JOIN
      Match AS matchData ON leagueData.id = matchData.league_id INNER JOIN Team AS
      teamInfo ON matchData.away_team_api_id = teamInfo.team_api_id WHERE leagueData.name
      = 'Scotland Premier League' AND matchData.season = '2009/2010' AND matchData.away_team_goal
      - matchData.home_team_goal > 0 GROUP BY matchData.away_team_api_id ORDER BY
      COUNT(*) DESC LIMIT 1
  expected_output:
  - '1028'
- name: question_35
  inputs: Which team scored the most away victories in the English Premier League
    during the 2011/2012 season?
  metadata:
    chunk_id: SELECT teamInfo.team_long_name FROM League AS leagueData INNER JOIN
      Match AS matchData ON leagueData.id = matchData.league_id INNER JOIN Team AS
      teamInfo ON matchData.away_team_api_id = teamInfo.team_api_id WHERE leagueData.name
      = 'Scotland Premier League' AND matchData.season = '2009/2010' AND matchData.away_team_goal
      - matchData.home_team_goal > 0 GROUP BY matchData.away_team_api_id ORDER BY
      COUNT(*) DESC LIMIT 1
  expected_output:
  - '1028'
- name: question_36
  inputs: During the intense thunderstorm at the Austrian Grand Prix, which driver
    recorded the fastest lap time and what was the duration of their pit stop?
  metadata:
    chunk_id: WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime,
      (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL)
      * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime,
      '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime,
      INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM
      results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT
      T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId
      = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN
      ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM
      fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId
      INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian
      Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1)
      AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') +
      1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand
      Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on
      lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId
  expected_output:
  - '1016'
- name: question_37
  inputs: Which drivers recorded the minimum fastest lap time during the Brazilian
    Grand Prix, and what were their corresponding pit stop durations?
  metadata:
    chunk_id: WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime,
      (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL)
      * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime,
      '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime,
      INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM
      results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT
      T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId
      = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN
      ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM
      fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId
      INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian
      Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1)
      AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') +
      1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand
      Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on
      lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId
  expected_output:
  - '1016'
- name: question_38
  inputs: During the annual pizza festival, which events included a budget for pizza
    expenses that were between a certain cost range? Can you provide the names and
    dates of these events?
  metadata:
    chunk_id: SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget
      AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id
      = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50
      AND T3.cost < 100
  expected_output:
  - '1448'
- name: question_39
  inputs: What is the fastest lap time recorded in Italy during the last 6 months
    of racing events?
  metadata:
    chunk_id: WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime,
      1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime,
      INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime
      IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER
      JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId
      = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as
      min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId
      = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country
      = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1)
      AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') +
      1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1
  expected_output:
  - '1014'
- name: question_40
  inputs: During a rainy weekend in Italy, a local racing enthusiast wondered which
    Formula 1 driver held the record for the fastest lap at any circuit in the country.
    What is the fastest lap time recorded by a driver in Italy, according to the race
    results?
  metadata:
    chunk_id: WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime,
      1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime,
      INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime
      IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER
      JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId
      = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as
      min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId
      = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country
      = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime,
      ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime,
      ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1)
      AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') +
      1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1
  expected_output:
  - '1014'
- name: question_41
  inputs: Are there any cards by a different artist that include content warnings,
    and what are their descriptions?
  metadata:
    chunk_id: SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE
      'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE
      T1.artist = 'Jim Pavelec'
  expected_output:
  - '494'
- name: question_42
  inputs: In the last six months, how many texts associated with cards from a specific
    artist indicate the presence of a content warning?
  metadata:
    chunk_id: SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE
      'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE
      T1.artist = 'Jim Pavelec'
  expected_output:
  - '494'
- name: question_43
  inputs: What percentage of cards from the set named 'Mirrodin' have both a cardKingdomFoilId
    and cardKingdomId associated with them?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId
      IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1
      INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap'
  expected_output:
  - '487'
- name: question_44
  inputs: Who are the top 20 drivers with the fastest lap times recorded during races
    in Italy?
  metadata:
    chunk_id: WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time,
      1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') -
      1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time,
      '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') +
      1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN
      SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time,
      '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT
      T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds)
      AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER
      JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds
      ASC LIMIT 20
  expected_output:
  - '1011'
- name: question_45
  inputs: Which drivers recorded the fastest lap times in the latest Formula 1 race
    held in Brazil?
  metadata:
    chunk_id: WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time,
      1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') -
      1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time,
      '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') +
      1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN
      SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time,
      '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT
      T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds)
      AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER
      JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds
      ASC LIMIT 20
  expected_output:
  - '1011'
- name: question_46
  inputs: What is the fastest lap time recorded in the last 6 months from the lapTimes
    database?
  metadata:
    chunk_id: SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time,
      INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time,
      ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':')
      - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time,
      ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time,
      ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time,
      INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1
  expected_output:
  - '1006'
- name: question_47
  inputs: What is the fastest lap time recorded in the last 6 months?
  metadata:
    chunk_id: SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time,
      INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time,
      ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':')
      - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time,
      ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time,
      ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time,
      INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1
  expected_output:
  - '1006'
- name: question_48
  inputs: Which driver had the best qualifying time in 2008 at the Monaco Grand Prix?
  metadata:
    chunk_id: SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers
      AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid
      WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId
      FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3,
      1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1,
      INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.')
      + 1) AS REAL) / 1000 ASC LIMIT 1
  expected_output:
  - '1001'
- name: question_49
  inputs: Which drivers achieved the fastest qualifying times at the Monaco Grand
    Prix in 2008, and what are their forenames and surnames?
  metadata:
    chunk_id: SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers
      AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid
      WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId
      FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3,
      1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1,
      INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.')
      + 1) AS REAL) / 1000 ASC LIMIT 1
  expected_output:
  - '1001'
- name: question_50
  inputs: Which constructor has amassed the most points in the Spanish Grand Prix
    from the year 1990 to 2020?
  metadata:
    chunk_id: SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults
      AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER
      JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix'
      AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC
      LIMIT 1
  expected_output:
  - '994'
- name: question_51
  inputs: Which constructor scored the highest total points in the Brazilian Grand
    Prix between 1980 and 2010?
  metadata:
    chunk_id: SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults
      AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER
      JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix'
      AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC
      LIMIT 1
  expected_output:
  - '994'
- name: question_52
  inputs: During a rainy season, the Singapore Grand Prix in a given year showcased
    some incredible racing. What constructors were involved in the race results that
    had a specific time format?
  metadata:
    chunk_id: SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races
      AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId
      = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009
      AND T1.time LIKE '_:%:__.___'
  expected_output:
  - '990'
- name: question_53
  inputs: Which constructors participated in a prominent grand prix held in the year
    before 2009, and what are their respective URLs?
  metadata:
    chunk_id: SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races
      AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId
      = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009
      AND T1.time LIKE '_:%:__.___'
  expected_output:
  - '990'
- name: question_54
  inputs: What events occurred in the last 6 months that had pizza expenses greater
    than 50 but less than 100 units?
  metadata:
    chunk_id: SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget
      AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id
      = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50
      AND T3.cost < 100
  expected_output:
  - '1448'
- name: question_55
  inputs: In a recent racing tournament where it rained for several days leading up
    to the final race, who were the top three fastest German drivers born between
    1980 and 1985 based on their average pit stop duration?
  metadata:
    chunk_id: SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers
      AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y',
      T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY
      AVG(T1.duration) LIMIT 3
  expected_output:
  - '988'
- name: question_56
  inputs: During a charity event held throughout a year filled with unpredictable
    weather, which members had approved expenses between certain dates, and which
    events did they attend as part of their involvement?
  metadata:
    chunk_id: SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS
      T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance
      AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date,
      1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'
  expected_output:
  - '1437'
- name: question_57
  inputs: Who are the top three French drivers born between 1985 and 1990 with the
    shortest average pit stop durations?
  metadata:
    chunk_id: SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers
      AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y',
      T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY
      AVG(T1.duration) LIMIT 3
  expected_output:
  - '988'
- name: question_58
  inputs: What distinct members had approved expenses and attended events during a
    six-month period prior to a specific date?
  metadata:
    chunk_id: SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS
      T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance
      AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date,
      1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'
  expected_output:
  - '1437'
- name: question_59
  inputs: What percentage of cards from a specific set, excluding those from the last
    year, have non-null identifiers for both card kingdom foil and id?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId
      IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1
      INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap'
  expected_output:
  - '487'
- name: question_60
  inputs: Which artists contributed to the card set named 'Fifth Dawn'?
  metadata:
    chunk_id: SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code =
      T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name
      = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist
      = 'Jeremy Jarvis') GROUP BY T1.artist
  expected_output:
  - '477'
- name: question_61
  inputs: During a rainy weekend, a group of friends decided to reminisce about their
    favorite card sets and the artists behind them. What artists have contributed
    to a card set with a specific name, known for being popular in the trading card
    game community?
  metadata:
    chunk_id: SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code =
      T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name
      = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist
      = 'Jeremy Jarvis') GROUP BY T1.artist
  expected_output:
  - '477'
- name: question_62
  inputs: What are the names and IDs of the card sets that are exclusively available
    in foil, have no foreign versions, and have a translation in one Asian language
    over the past six months?
  metadata:
    chunk_id: SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS
      T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly
      = 1 AND T1.isForeignOnly = 0
  expected_output:
  - '431'
- name: question_63
  inputs: What are the names and IDs of sets that are only available in foil and not
    in a foreign language, but instead queried for a language such as Spanish?
  metadata:
    chunk_id: SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS
      T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly
      = 1 AND T1.isForeignOnly = 0
  expected_output:
  - '431'
- name: question_64
  inputs: What percentage of the total records in the dataset, created within the
    last 6 months, are associated with a specific language based on the defined criteria
    for the 'power' field?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2
      ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'
  expected_output:
  - '416'
- name: question_65
  inputs: While enjoying a sunny afternoon, one might wonder how many of the cards
    in our collection are associated with a certain language, particularly those that
    are either untapped for power or have a generic designation. What percentage of
    these cards are linked to French language data?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2
      ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'
  expected_output:
  - '416'
- name: question_66
  inputs: What percentage of legal cards in a certain format have no content warnings
    over the past year?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON
      T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal'
  expected_output:
  - '415'
- name: question_67
  inputs: What percentage of cards in the 'standard' format, which are considered
    'legal', do not have a content warning?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON
      T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal'
  expected_output:
  - '415'
- name: question_68
  inputs: What percentage of story spotlight cards are associated with individuals
    who speak Spanish?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2
      ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1
  expected_output:
  - '371'
- name: question_69
  inputs: During a recent cultural festival, many people were interested in the storytelling
    cards available. What percentage of these story spotlight cards were presented
    in French?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END)
      AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2
      ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1
  expected_output:
  - '371'
- name: question_70
  inputs: What are the distinct elements and bond types associated with the molecule
    identified by the molecule_id 'XY123'?
  metadata:
    chunk_id: SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN
      bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'
  expected_output:
  - '337'
- name: question_71
  inputs: What unique elements and their corresponding bond types are found in a different
    molecule identified by a unique identifier?
  metadata:
    chunk_id: SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN
      bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'
  expected_output:
  - '337'
- name: question_72
  inputs: While conducting research on elements during an unusually stormy week, a
    scientist wonders, what elements can be identified from atoms associated with
    a specific molecule that is marked with a special label?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id
      = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'
  expected_output:
  - '334'
- name: question_73
  inputs: What elements are associated with atoms that belong to molecules labeled
    in a specific manner? Can you specify which atom IDs correspond to such molecules
    based on their relationships?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id
      = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'
  expected_output:
  - '334'
- name: question_74
  inputs: In a bustling chemistry lab during a roaring thunderstorm, researchers are
    analyzing various molecules to determine how many of them contain a specific label
    associated with hydrogen elements in bonds of a certain type. What percentage
    of these molecules successfully meet that criterion?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS
      T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id
      = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h'
  expected_output:
  - '330'
- name: question_75
  inputs: What percentage of molecules, containing oxygen atoms, and having a specified
    bond type, possess a positive label?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS
      T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id
      = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h'
  expected_output:
  - '330'
- name: question_76
  inputs: What elements are found in a specific molecule that are associated with
    a labeled bond type during a recent 6-month period?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id
      = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '='
  expected_output:
  - '328'
- name: question_77
  inputs: What percentage of drivers born before a specified year and who completed
    more than a certain number of laps participated in races occurring within a modified
    timeframe of 1.5 years?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50,
      1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on
      T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId
      WHERE T2.year BETWEEN 2000 AND 2005
  expected_output:
  - '962'
- name: question_78
  inputs: What percentage of drivers older than a certain age who completed more than
    a specified number of laps participated in races held in a different time period?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50,
      1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on
      T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId
      WHERE T2.year BETWEEN 2000 AND 2005
  expected_output:
  - '962'
- name: question_79
  inputs: What was the average race time in seconds for winners in Formula 1 races
    held in Germany before the year 1980?
  metadata:
    chunk_id: WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder,
      CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600)
      + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS
      REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds
      FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time
      IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds
      WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time
      WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL
  expected_output:
  - '955'
- name: question_80
  inputs: What was the average race completion time in seconds for champions during
    the first half of the 1970s?
  metadata:
    chunk_id: WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder,
      CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600)
      + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS
      REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds
      FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time
      IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds
      WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time
      WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL
  expected_output:
  - '955'
- name: question_81
  inputs: What percentage of races were completed by Japanese drivers during a period
    of 1.5 years, considering only those races in which their finishing time was recorded?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId)
      FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN
      drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese'
      AND T2.year BETWEEN 2007 AND 2009
  expected_output:
  - '954'
- name: question_82
  inputs: What percentage of valid race results did drivers of a different nationality
    achieve between 2010 and 2012 in all recorded races?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId)
      FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN
      drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese'
      AND T2.year BETWEEN 2007 AND 2009
  expected_output:
  - '954'
- name: question_83
  inputs: What is the performance metric of the last driver in the Monaco Grand Prix
    compared to the champion's time in the same race year?
  metadata:
    chunk_id: WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder
      = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time,
      3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time,
      2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON
      T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS
      NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds
      WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM
      time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds)
      ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) *
      100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental)
      FROM champion_time)
  expected_output:
  - '944'
- name: question_84
  inputs: What was the performance ratio of the last driver to the champion in a different
    race event held in a different year?
  metadata:
    chunk_id: WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder
      = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time,
      3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time,
      2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON
      T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS
      NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds
      WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM
      time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds)
      ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) *
      100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental)
      FROM champion_time)
  expected_output:
  - '944'
- name: question_85
  inputs: What percentage of races did a specific driver not finish in the top position
    over the last 1.5 years?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS
      REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings
      AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId
      WHERE T3.surname = 'Hamilton' AND T1.year >= 2010
  expected_output:
  - '896'
- name: question_86
  inputs: In an unusually rainy season of Formula 1 racing, how many of the races
    held after a certain year did a renowned driver with the surname 'Hamilton' finish
    outside of the top position?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS
      REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings
      AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId
      WHERE T3.surname = 'Hamilton' AND T1.year >= 2010
  expected_output:
  - '896'
- name: question_87
  inputs: What is the percentage difference in fastest lap speeds for the driver named
    Paul di Resta between two selected races in the past 1.5 years?
  metadata:
    chunk_id: SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId
      = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed,
      0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId
      WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'
  expected_output:
  - '880'
- name: question_88
  inputs: What is the percentage difference in fastest lap speeds for Paul di Resta
    between the races held in Belgium and Italy?
  metadata:
    chunk_id: SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId
      = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed,
      0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId
      WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'
  expected_output:
  - '880'
- name: question_89
  inputs: During the annual science fair, a student presented their project on molecular
    structures, focusing on elements connected by specific bond types. What elements
    are part of a molecule that has bonds of a particular type in its structure?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id
      = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '='
  expected_output:
  - '328'
- name: question_90
  inputs: As the city prepares for its annual fireworks festival amidst light drizzle,
    what element is associated with the specific atom identified by a particular atom_id?
  metadata:
    chunk_id: SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'
  expected_output:
  - '322'
- name: question_91
  inputs: During a scientific conference about the properties of elements, a researcher
    mentioned a rare atom that the team was studying. Can you identify the element
    that corresponds to a specific atom identifier they were focusing on?
  metadata:
    chunk_id: SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'
  expected_output:
  - '322'
- name: question_92
  inputs: How many distinct elements are associated with a bond ID different from
    'TR001_3_4' in the atom and connected datasets?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected
      AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4'
  expected_output:
  - '319'
- name: question_93
  inputs: What is the distinct count of elements associated with bond ID 'XY002_5_1'
    in the atom and connected tables?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected
      AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4'
  expected_output:
  - '319'
- name: question_94
  inputs: What elements are associated with a specific bond identifier from the connected
    atoms, considering only those connections made in the last 6 months?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR000_2_3'
  expected_output:
  - '307'
- name: question_95
  inputs: What elements are connected through the bond with ID 'TR001_2_3' in the
    given database?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR000_2_3'
  expected_output:
  - '307'
- name: question_96
  inputs: During a recent experiment on a rainy day, researchers discovered several
    molecules linked by a specific bond type. What distinct molecule IDs and their
    corresponding elements can be identified from their findings?
  metadata:
    chunk_id: SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN
      atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'
  expected_output:
  - '306'
- name: question_97
  inputs: On a rainy day when scientists are analyzing various molecular structures
    in their lab, how can they find unique elements associated with specific bond
    types within their collection of molecules?
  metadata:
    chunk_id: SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN
      atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'
  expected_output:
  - '306'
- name: question_98
  inputs: What unique elements are associated with molecules labeled 'A' in the database?
  metadata:
    chunk_id: SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN
      molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'
  expected_output:
  - '304'
- name: question_99
  inputs: What distinct elements are found in molecules labeled with a specific characteristic
    over the past 6 months?
  metadata:
    chunk_id: SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN
      molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'
  expected_output:
  - '304'
- name: question_100
  inputs: What distinct elements can be identified from the atom table that are connected
    through a different bond identifier in a chemical database?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2
      ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4'
  expected_output:
  - '302'
- name: question_101
  inputs: What distinct elements are associated with a specific bond in the last 6
    months?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2
      ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4'
  expected_output:
  - '302'
- name: question_102
  inputs: What distinct elements can be found in a different molecule identified by
    the molecule_id 'XYZ123'?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'
  expected_output:
  - '290'
- name: question_103
  inputs: What percentage of superheroes from the publisher 'DC Comics' have a 'Good'
    alignment?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher
      AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id
      = T3.id WHERE T2.publisher_name = 'Marvel Comics'
  expected_output:
  - '835'
- name: question_104
  inputs: In a research project focused on the impact of different chemical compounds
    on plant growth, what distinct elements are associated with a particular molecule
    identified by its unique ID?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'
  expected_output:
  - '290'
- name: question_105
  inputs: What percentage of superheroes from a major comic book publisher were classified
    as having a 'Good' alignment over the past 1.5 years?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher
      AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id
      = T3.id WHERE T2.publisher_name = 'Marvel Comics'
  expected_output:
  - '835'
- name: question_106
  inputs: What elements are connected to a specific bond type within a certain timeframe?
    Can you specify the elements that interact with this bond in the context of a
    given relationship?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id
      = 'TR001_10_11'
  expected_output:
  - '285'
- name: question_107
  inputs: In a lab experiment where scientists are researching the effects of thunderstorms
    on chemical reactions, what elements can be identified that are connected through
    a specific bond type?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id
      = 'TR001_10_11'
  expected_output:
  - '285'
- name: question_108
  inputs: In a world where scientists are studying the impact of weather patterns
    on molecular structures, what is the ratio of hydrogen atoms to the total number
    of atoms present in a specific molecule, identified by a designated label?
  metadata:
    chunk_id: WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id,
      T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN
      atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE
      COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label
  expected_output:
  - '282'
- name: question_109
  inputs: In a bustling lab where a team is trying to develop a new reaction under
    a heat wave, how could they determine the ratio of hydrogen atoms to total atoms
    in a certain molecule structure they labeled, without worrying about the molecule
    number?
  metadata:
    chunk_id: WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id,
      T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN
      atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE
      COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label
  expected_output:
  - '282'
- name: question_110
  inputs: What distinct elements can be identified from molecules that meet a specific
    labeling criterion and contain atoms with particular characteristics in their
    IDs, considering only those that have IDs of a certain length and suffix?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2
      ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id,
      -1) = '4' AND LENGTH(T1.atom_id) = 7
  expected_output:
  - '281'
- name: question_111
  inputs: What unique elements can be found in molecules labeled with a different
    type of charge, where atoms have a specific identifier structure similar to those
    with lengths of seven characters and ending in the number '4'?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2
      ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id,
      -1) = '4' AND LENGTH(T1.atom_id) = 7
  expected_output:
  - '281'
- name: question_112
  inputs: What elements are associated with a bond that connects atoms in a certain
    configuration, considering a specific connection type? Could you specify the relationship
    for a different bond_id that might be of interest?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id WHERE T2.bond_id = 'TR000_1_2'
  expected_output:
  - '277'
- name: question_113
  inputs: What elements are connected through a specific bond in a chemical structure?
    Additionally, how might the selection of these elements change if we consider
    only the last six months of recorded data?
  metadata:
    chunk_id: SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id WHERE T2.bond_id = 'TR000_1_2'
  expected_output:
  - '277'
- name: question_114
  inputs: On a sunny Saturday afternoon, while planning a surprise party for the Vice
    President of the organization, what social events held at a specific downtown
    location did they attend recently?
  metadata:
    chunk_id: SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON
      T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member
      = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E.
      Washington St.' AND T2.type = 'Social'
  expected_output:
  - '1429'
- name: question_115
  inputs: What elements are associated with a specific bond within a given connection
    of atoms? Additionally, how might the results change if we were examining bonds
    established over a time period of one year?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR001_10_11'
  expected_output:
  - '268'
- name: question_116
  inputs: What social events have members holding the position of Vice President attended
    at a specified location in the community?
  metadata:
    chunk_id: SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON
      T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member
      = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E.
      Washington St.' AND T2.type = 'Social'
  expected_output:
  - '1429'
- name: question_117
  inputs: What is the ratio of the advertisement budget spent on the 'Yearly Kickoff'
    event to that spent on the 'October Meeting' event over a 6-month period?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount
      ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN
      T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event
      = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting'
  expected_output:
  - '1359'
- name: question_118
  inputs: What percentage of superheroes published by a particular publisher were
    female during the last year?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END)
      AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2
      ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE
      T2.publisher_name = 'George Lucas'
  expected_output:
  - '834'
- name: question_119
  inputs: What percentage of superheroes from a particular publisher are female, considering
    only those released in the last year?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END)
      AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2
      ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE
      T2.publisher_name = 'George Lucas'
  expected_output:
  - '834'
- name: question_120
  inputs: What is the difference in the number of superheroes published by two specified
    publishers in a different country?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)
      - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM
      superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
  expected_output:
  - '829'
- name: question_121
  inputs: At a crowded comic book convention, how can we calculate the difference
    in the number of superheroes published by two specific comic book publishers?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END)
      - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM
      superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
  expected_output:
  - '829'
- name: question_122
  inputs: What atomic elements are associated with bonds in a given connection within
    a specified timeframe?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR001_10_11'
  expected_output:
  - '268'
- name: question_123
  inputs: At the annual superhero training camp, all participants with either no weight
    or a weight of zero were evaluated based on their eye color. What is the difference
    in the number of superheroes with a specific eye color compared to another specific
    eye color among the participants?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id
      = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id
      = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL
  expected_output:
  - '819'
- name: question_124
  inputs: What percentage of atoms are of the element 'o' among atoms that are part
    of molecules bonded with a '+' type bond?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL
      END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element
      FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type
      = '-' ) AS T
  expected_output:
  - '263'
- name: question_125
  inputs: In a superhero database, how many more superheroes have a specific eye colour
    compared to another, considering only those with an unknown or zero weight over
    the last six months?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id
      = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id
      = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL
  expected_output:
  - '819'
- name: question_126
  inputs: During a regional chemistry competition, participants submitted their molecular
    structures, which were analyzed for various elements. What percentage of the atoms
    in the submitted structures were identified as a certain element, given that those
    structures included only single bonds?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL
      END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element
      FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type
      = '-' ) AS T
  expected_output:
  - '263'
- name: question_127
  inputs: What unique elements can be identified from bonds of a specific type in
    the last 6 months?
  metadata:
    chunk_id: SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2
      ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id
      WHERE T1.bond_type = '#'
  expected_output:
  - '253'
- name: question_128
  inputs: During a thunderstorm, a scientist is researching the properties of various
    chemical bonds. What distinct elements are connected to a specific bond type defined
    by the scientist?
  metadata:
    chunk_id: SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2
      ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id
      WHERE T1.bond_type = '#'
  expected_output:
  - '253'
- name: question_129
  inputs: What proportion of female superheroes exists among those categorized as
    'Good' in a different city or country?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment
      AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id
      WHERE T2.alignment = 'Bad'
  expected_output:
  - '818'
- name: question_130
  inputs: What percentage of superheroes classified as 'Bad' are female in the database?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment
      AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id
      WHERE T2.alignment = 'Bad'
  expected_output:
  - '818'
- name: question_131
  inputs: What percentage of female superheroes published by a particular publisher
    can be identified over the last year?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN
      1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN
      publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id
      = T3.id WHERE T3.gender = 'Female'
  expected_output:
  - '788'
- name: question_132
  inputs: What percentage of female superheroes published by a notable publisher was
    there in the last year compared to the total number of female superheroes?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN
      1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN
      publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id
      = T3.id WHERE T3.gender = 'Female'
  expected_output:
  - '788'
- name: question_133
  inputs: In the recent Superhero Convention, where numerous female characters showcased
    their unique abilities, what percentage of these female superheroes have blue
    skin colour?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS
      T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id
      WHERE T2.gender = 'Female'
  expected_output:
  - '775'
- name: question_134
  inputs: What percentage of the female superheroes have a skin colour categorized
    as 'Blue', considering their diversity during a particularly stormy meeting?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL
      END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS
      T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id
      WHERE T2.gender = 'Female'
  expected_output:
  - '775'
- name: question_135
  inputs: Which superheroes in France have matching eye, hair, and skin colors, and
    what are their respective publishers?
  metadata:
    chunk_id: SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER
      JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id
      AND T1.eye_colour_id = T1.skin_colour_id
  expected_output:
  - '773'
- name: question_136
  inputs: Which superheroes share the same eye, hair, and skin color, and what publishers
    represent them in the comic book industry in Asia?
  metadata:
    chunk_id: SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER
      JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id
      AND T1.eye_colour_id = T1.skin_colour_id
  expected_output:
  - '773'
- name: question_137
  inputs: What are the various eye, hair, and skin colors of female superheroes published
    by a well-known comic publisher?
  metadata:
    chunk_id: SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero
      AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender
      AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics'
      AND T3.gender = 'Female'
  expected_output:
  - '772'
- name: question_138
  inputs: During the annual comic convention where publishers showcase their latest
    releases, what are the various eye, hair, and skin colors of female superheroes
    associated with a particular comic publisher known for its diverse character lineup?
  metadata:
    chunk_id: SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero
      AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender
      AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics'
      AND T3.gender = 'Female'
  expected_output:
  - '772'
- name: question_139
  inputs: Which superhero from a specific comic publisher is known to have the highest
    durability attribute?
  metadata:
    chunk_id: SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute
      AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id
      INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name
      = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value
      DESC LIMIT 1
  expected_output:
  - '769'
- name: question_140
  inputs: Which superhero published by a prominent comic publisher has the highest
    durability attribute?
  metadata:
    chunk_id: SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute
      AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id
      INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name
      = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value
      DESC LIMIT 1
  expected_output:
  - '769'
- name: question_141
  inputs: What percentage of superheroes published by a different publisher, say 'DC
    Comics', fall within the height range of 160 to 190 cm?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN
      1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN
      publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND
      180
  expected_output:
  - '760'
- name: question_142
  inputs: During a recent team-building retreat, the marketing team reviewed their
    budget allocations for various events. What is the ratio of the funds spent on
    the Yearly Kickoff event to those spent on the October Meeting considering only
    the advertisement category?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount
      ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN
      T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event
      = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting'
  expected_output:
  - '1359'
- name: question_143
  inputs: What percentage of superheroes published by a different publisher fall within
    a height range of 160 to 190 centimeters?
  metadata:
    chunk_id: SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN
      1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN
      publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND
      180
  expected_output:
  - '760'
- name: question_144
  inputs: During the charity event organized by the community in the fall, what was
    the average cost of expenses made by the member with the specified first and last
    name during the months of September and October?
  metadata:
    chunk_id: SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id
      = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah'
      AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) =
      '10')
  expected_output:
  - '1339'
- name: question_145
  inputs: At a bustling comic convention where fans eagerly debate their favorite
    superhero universes, what is the difference in the number of superheroes associated
    with two major comic book publishers?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE
      0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM
      superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
  expected_output:
  - '744'
- name: question_146
  inputs: In the year when a major sports event led to increased spending in the community,
    what was the average cost of expenses recorded for a member with the last name
    'Allen' and the first name 'Elijah' during the months of September and October?
  metadata:
    chunk_id: SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id
      = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah'
      AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) =
      '10')
  expected_output:
  - '1339'
- name: question_147
  inputs: How does the count of superheroes published by Publisher A compare to those
    published by Publisher B in a specified region?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE
      0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM
      superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
  expected_output:
  - '744'
- name: question_148
  inputs: Which distinct patient IDs from the European patient records had a laboratory
    RBC count that is either below normal or above normal, while also having a record
    of not being admitted to the hospital?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-'
  expected_output:
  - '1307'
- name: question_149
  inputs: What percentage of superheroes with a 'Bad' alignment are published by 'Marvel
    Comics' compared to the total number of superheroes, considering only the last
    six months?
  metadata:
    chunk_id: SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)),
      CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS
      REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
      INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'
  expected_output:
  - '743'
- name: question_150
  inputs: Which patients, not admitted for treatment over the past 6 months, exhibit
    abnormal levels of RBC in their laboratory tests?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-'
  expected_output:
  - '1307'
- name: question_151
  inputs: How many patients in the city are experiencing low CPK levels along with
    positive results in specific blood clotting examinations during the football tournament?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250
      AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+')
  expected_output:
  - '1302'
- name: question_152
  inputs: How many patients had a laboratory test result below a certain threshold
    and exhibited specific examination criteria in the last 6 months?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250
      AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+')
  expected_output:
  - '1302'
- name: question_153
  inputs: At the stormy superhero convention, can you determine the percentage of
    'Bad' aligned superheroes in comparison to the entire superhero population, and
    how many of those 'Bad' ones are published by 'Marvel Comics'?
  metadata:
    chunk_id: SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)),
      CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS
      REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
      INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'
  expected_output:
  - '743'
- name: question_154
  inputs: During a rainy week when the hospital implemented new health protocols,
    how many patients had laboratory tests that indicated elevated T-BIL levels and
    presented with a specific ANA pattern containing the letter 'P'?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL`
      >= 2 AND T3.`ANA Pattern` LIKE '%P%'
  expected_output:
  - '1295'
- name: question_155
  inputs: What are the names of superheroes who possess the power of Flight and are
    published by DC Comics?
  metadata:
    chunk_id: SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM
      hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name
      = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher
      AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id)
  expected_output:
  - '730'
- name: question_156
  inputs: What elements are connected to the bond identified as 'XY123_8_19' in the
    database?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR144_8_19'
  expected_output:
  - '249'
- name: question_157
  inputs: What elements are linked to a specific bond in a different hypothetical
    connection, say 'TRXYZ_1_1', within the atom database?
  metadata:
    chunk_id: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id
      = T2.atom_id WHERE T1.bond_id = 'TR144_8_19'
  expected_output:
  - '249'
- name: question_158
  inputs: Which superheroes are published by a specific comic publisher and possess
    a certain superpower linked to their abilities?
  metadata:
    chunk_id: SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM
      hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name
      = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher
      AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id)
  expected_output:
  - '730'
- name: question_159
  inputs: At the upcoming superhero convention, attendees are eager to know which
    superheroes with striking eye and hair colors are on the guest list. Can you identify
    the names of superheroes who have a certain eye color and a certain hair color?
  metadata:
    chunk_id: SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2
      ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id
      WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'
  expected_output:
  - '724'
- name: question_160
  inputs: During the preparations for the science fair, a teacher wants to find out
    which chemical elements are unique and do not have any connections to other elements.
    Can you help identify those elements?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT
      DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id )
  expected_output:
  - '247'
- name: question_161
  inputs: In a fictional world where scientists are experimenting with different elements
    to create a new form of energy, which distinct elements have not formed any connections
    with others during their experiments?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT
      DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id
      = T2.atom_id )
  expected_output:
  - '247'
- name: question_162
  inputs: During a recent science fair, students showcased their projects on various
    molecular structures. What unique elements were identified in one of the exhibited
    molecules?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'
  expected_output:
  - '240'
- name: question_163
  inputs: What unique elements can be found in molecules that were created or analyzed
    within the last six months?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'
  expected_output:
  - '240'
- name: question_164
  inputs: What is the most common bond type associated with the molecule ID categorized
    as 'XYZ123' in the database?
  metadata:
    chunk_id: SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id)
      FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER
      BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T
  expected_output:
  - '231'
- name: question_165
  inputs: What is the most common bond type associated with a specific molecule over
    the last year?
  metadata:
    chunk_id: SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id)
      FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER
      BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T
  expected_output:
  - '231'
- name: question_166
  inputs: What distinct elements and their labels are associated with a molecule that
    has a specific identifier in the database?
  metadata:
    chunk_id: SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule
      AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'
  expected_output:
  - '230'
- name: question_167
  inputs: During a particularly stormy week at the research lab, scientists are studying
    various molecules and their elements. What unique elements and their corresponding
    labels are associated with a specific molecule they are investigating?
  metadata:
    chunk_id: SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule
      AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'
  expected_output:
  - '230'
- name: question_168
  inputs: In a study of chemical compounds, what are the first three distinct elements
    found in a molecule identified by 'XY123'?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000'
      ORDER BY T.element LIMIT 3
  expected_output:
  - '220'
- name: question_169
  inputs: What are the three distinct elements found in the molecule with the identifier
    'MX100'?
  metadata:
    chunk_id: SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000'
      ORDER BY T.element LIMIT 3
  expected_output:
  - '220'
- name: question_170
  inputs: What percentage of distinct molecules linked by a specific bond type have
    the label '+' over the last 1.5 years?
  metadata:
    chunk_id: SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id
      ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS
      T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond
      AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#'
  expected_output:
  - '219'
- name: question_171
  inputs: What is the percentage of unique molecules labeled as '-' among all distinct
    molecules connected by bond type '@'?
  metadata:
    chunk_id: SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id
      ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS
      T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond
      AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#'
  expected_output:
  - '219'
- name: question_172
  inputs: During a health screening fair on a rainy Saturday, organizers noticed that
    several patients had elevated T-BIL levels accompanied by an unusual ANA pattern.
    How many patients were found to have both conditions based on the screening data?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL`
      >= 2 AND T3.`ANA Pattern` LIKE '%P%'
  expected_output:
  - '1295'
- name: question_173
  inputs: What are the levels of aCL IgG, aCL IgM, and aCL IgA for female patients
    who had laboratory results greater than a specified threshold in the last 6 months?
  metadata:
    chunk_id: SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER
      JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID
      = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1
  expected_output:
  - '1292'
- name: question_174
  inputs: During a recent health awareness event, a doctor mentioned the importance
    of monitoring immunoglobulin levels in female patients. What are the levels of
    aCL IgG, IgM, and IgA for the female patient with the highest urinary analysis
    value?
  metadata:
    chunk_id: SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER
      JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID
      = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1
  expected_output:
  - '1292'
- name: question_175
  inputs: How many distinct female patients have negative laboratory results and no
    recorded symptoms in their examinations within the last year?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170
      = 'negative' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.Symptoms IS NULL
  expected_output:
  - '1270'
- name: question_176
  inputs: How many distinct male patients have undergone laboratory examinations with
    negative results and no recorded symptoms?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170
      = 'negative' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.Symptoms IS NULL
  expected_output:
  - '1270'
- name: question_177
  inputs: During a recent health awareness campaign, the local hospital wanted to
    identify how many unique patients aged under 70 have laboratory results indicating
    elevated levels of a specific lab test. Can you provide the count of these patients
    from the records, while also considering that only those who've had lab tests
    done are included?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) -
      STRFTIME('%Y', T1.Birthday) < 70
  expected_output:
  - '1257'
- name: question_178
  inputs: How many distinct patients from France have a laboratory result indicating
    a significant health concern and are also under the age of 70?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) -
      STRFTIME('%Y', T1.Birthday) < 70
  expected_output:
  - '1257'
- name: question_179
  inputs: How many distinct male patients from New York have laboratory test results
    indicating abnormal FG levels and a normal range of WBC counts?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND
      T2.WBC < 9.0 AND T1.SEX = 'M'
  expected_output:
  - '1247'
- name: question_180
  inputs: How many distinct male patients, whose laboratory results indicate abnormal
    FG and WBC levels, have been recorded in the database for patients living in a
    specified country other than Canada?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND
      T2.WBC < 9.0 AND T1.SEX = 'M'
  expected_output:
  - '1247'
- name: question_181
  inputs: What percentage of distinct molecule IDs associated with elements other
    than 'f' can be found in the dataset labeled with 'X', where 'X' represents any
    label other than '+'?
  metadata:
    chunk_id: SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id
      ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS
      T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label
      = '+'
  expected_output:
  - '218'
- name: question_182
  inputs: Which superheroes have blue eyes and blonde hair? What common features do
    they share?
  metadata:
    chunk_id: SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2
      ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id
      WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'
  expected_output:
  - '724'
- name: question_183
  inputs: During a recent festival where many users were active outdoors, what percentage
    of posts made by the most reputable users scored above 50?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId
      INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation
      = T3.max_reputation
  expected_output:
  - '701'
- name: question_184
  inputs: What percentage of posts created by users with the highest reputation in
    a different country had scores above a specified threshold?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId
      INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation
      = T3.max_reputation
  expected_output:
  - '701'
- name: question_185
  inputs: In a community where the weather has been unusually sunny, how do user engagement
    levels, specifically with a particular type of tag, compare to the total number
    of posts made by users with a designated display name?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id)
      FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN
      tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'
  expected_output:
  - '639'
- name: question_186
  inputs: What percentage of distinct molecule IDs associated with atoms that are
    not of a certain element are labeled with a specific designation over the last
    year?
  metadata:
    chunk_id: SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id
      ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS
      T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label
      = '+'
  expected_output:
  - '218'
- name: question_187
  inputs: What percentage of female patients older than 54 years had a laboratory
    test result greater than or equal to 14 during the last year?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0
      END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday)
      > 55
  expected_output:
  - '1243'
- name: question_188
  inputs: How many distinct iodine and sulfur atoms were found in the last six months
    that are connected by a specific bond type?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE
      NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id
      ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON
      T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE
      T3.bond_type = '-'
  expected_output:
  - '215'
- name: question_189
  inputs: What percentage of female patients older than 54 years have a specific laboratory
    value greater than or equal to a threshold over the past 18 months?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0
      END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday)
      > 55
  expected_output:
  - '1243'
- name: question_190
  inputs: In a hospital conducting a health survey in a year when it was notably chilly
    and wet, how can we identify patients whose platelet levels fell within a healthy
    range and who are no more than 50 years old, given that their birthdays have not
    surpassed a certain year?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date)
      - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'
  expected_output:
  - '1242'
- name: question_191
  inputs: What percentage of posts created by users with the display name 'Members'
    are tagged with a specific tag in the system?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id)
      FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN
      tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'
  expected_output:
  - '639'
- name: question_192
  inputs: What are the distinct IDs of patients in the United Kingdom who had a platelet
    count within a normal range in a specific year, are under 50 years old, and have
    laboratory records?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date)
      - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'
  expected_output:
  - '1242'
- name: question_193
  inputs: In the context of a literature festival where popular authors are discussed,
    which user among a well-known author or a famous scientist has the most viewed
    posts based on their contributions?
  metadata:
    chunk_id: SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2
      ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName
      = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName
      ORDER BY SUM(T3.ViewCount) DESC LIMIT 1
  expected_output:
  - '634'
- name: question_194
  inputs: In a study of patients in Europe, what is the difference between the number
    of individuals with a platelet count less than or equal to a defined lower threshold
    and those with a platelet count exceeding a higher threshold?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN
      T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS
      T2 ON T1.ID = T2.ID
  expected_output:
  - '1241'
- name: question_195
  inputs: Which user among those from a specified city has the highest total view
    count on their posts?
  metadata:
    chunk_id: SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2
      ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName
      = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName
      ORDER BY SUM(T3.ViewCount) DESC LIMIT 1
  expected_output:
  - '634'
- name: question_196
  inputs: What is the percentage change in the number of 'Employee' badges awarded
    between two specific years in a given database?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) *
      100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL)
      * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'
  expected_output:
  - '598'
- name: question_197
  inputs: During the school's annual festival, the principal noticed a fluctuation
    in student involvement over the years. How can we assess the percentage change
    in the issuance of 'Student' badges between two specific years to understand the
    impact of the festival on student engagement?
  metadata:
    chunk_id: SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) *
      100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL)
      * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'
  expected_output:
  - '598'
- name: question_198
  inputs: Which users have posted titles related to the concept of 'statistical' that
    also have a bounty amount of 30?
  metadata:
    chunk_id: SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS
      T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount
      = 50 AND T1.Title LIKE '%variance%'
  expected_output:
  - '586'
- name: question_199
  inputs: In a study of patients over the past year, how does the number of patients
    with a platelet count below a certain level compare to those with a count above
    another level?
  metadata:
    chunk_id: SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN
      T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS
      T2 ON T1.ID = T2.ID
  expected_output:
  - '1241'
- name: question_200
  inputs: What is the age of patients in France who have a hematocrit level of 52
    or higher in their laboratory results, considering they have had at least two
    such results?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y',
      T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
      WHERE T1.ID IN ( SELECT ID FROM Laboratory WHERE HCT >= 52 GROUP BY ID HAVING
      COUNT(ID) >= 2 )
  expected_output:
  - '1239'
- name: question_201
  inputs: How many patients had a high HCT level in the last six months, and what
    are their respective ages?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y',
      T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
      WHERE T1.ID IN ( SELECT ID FROM Laboratory WHERE HCT >= 52 GROUP BY ID HAVING
      COUNT(ID) >= 2 )
  expected_output:
  - '1239'
- name: question_202
  inputs: What distinct IDs and admissions can be found for female patients aged 49
    and older who have unusually low or high red blood cell counts within the last
    1.5 years?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)
      AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50
  expected_output:
  - '1236'
- name: question_203
  inputs: Which female patients aged over 50 have shown abnormal red blood cell counts
    in the last year?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)
      AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50
  expected_output:
  - '1236'
- name: question_204
  inputs: How many distinct iodine and sulfur atoms are connected by a specific bond
    type over the past year?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE
      NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id
      ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON
      T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE
      T3.bond_type = '-'
  expected_output:
  - '215'
- name: question_205
  inputs: During the annual science fair, students presented their projects on molecular
    interactions, but one element consistently appeared to have the least association
    with certain types of molecules. What is the element that is linked to the fewest
    distinct molecules labeled with a negative designation?
  metadata:
    chunk_id: SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id)
      FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id)
      ASC LIMIT 1) t
  expected_output:
  - '212'
- name: question_206
  inputs: Which users have authored posts containing a specific keyword in the title
    and received a certain amount of bounty in the last year?
  metadata:
    chunk_id: SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS
      T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount
      = 50 AND T1.Title LIKE '%variance%'
  expected_output:
  - '586'
- name: question_207
  inputs: What are the distinct IDs and genders of patients who have had laboratory
    results showing high blood glucose and low cholesterol levels in the last 6 months,
    and what are their ages?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) -
      STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250
  expected_output:
  - '1232'
- name: question_208
  inputs: What are the unique identifiers and ages of male patients in Germany who
    had elevated glucose levels and total cholesterol below a specific threshold in
    their recent laboratory tests?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) -
      STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON
      T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250
  expected_output:
  - '1232'
- name: question_209
  inputs: How many unique male patients born between 1930 and 1950 in the United Kingdom
    have laboratory CPK levels above a certain threshold?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND
      '1956' AND T1.SEX = 'M' AND T2.CPK >= 250
  expected_output:
  - '1231'
- name: question_210
  inputs: What distinct names and formats can be found for legal items in the 'Theros
    Beyond Death' set that match specific UUIDs?
  metadata:
    chunk_id: SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format
      ELSE NULL END FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid
      WHERE T2.setCode IN ( SELECT code FROM sets WHERE name = 'Hour of Devastation'
      )
  expected_output:
  - '528'
- name: question_211
  inputs: What atomic element is associated with the fewest distinct molecules labeled
    in a specific way over the last year?
  metadata:
    chunk_id: SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id)
      FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
      WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id)
      ASC LIMIT 1) t
  expected_output:
  - '212'
- name: question_212
  inputs: On a rainy day when the chemistry club was planning their next experimental
    project, they wondered which distinct elements in their database form equal bonds
    with others. Can you identify those elements that are connected through specific
    bond types based on the club's data?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON
      T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id
      WHERE T2.bond_type = '='
  expected_output:
  - '207'
- name: question_213
  inputs: What distinct elements can be sourced from molecules that exhibit equal
    bond types in their atomic connections?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON
      T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id
      WHERE T2.bond_type = '='
  expected_output:
  - '207'
- name: question_214
  inputs: What distinct elements are associated with a bond identified by a specific
    identifier in a chemical structure?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2
      ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'
  expected_output:
  - '206'
- name: question_215
  inputs: What distinct elements can be identified in the atom table that are connected
    via any bond with an ID related to the connection between atoms in a European
    context?
  metadata:
    chunk_id: SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2
      ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'
  expected_output:
  - '206'
- name: question_216
  inputs: During a chemistry conference where researchers discussed various molecular
    bonding types, one expert wanted to know how many single bonds are average in
    molecules that have a specific label character. Can you calculate the average
    number of single bonds for labeled molecules in the dataset?
  metadata:
    chunk_id: SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type)
      AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id
      = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id
      WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery
  expected_output:
  - '198'
- name: question_217
  inputs: During a scientific conference amidst rain, researchers discovered that
    certain molecules labeled with '+' have varying bonding characteristics. What
    is the average count of single bonds for these molecules?
  metadata:
    chunk_id: SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type)
      AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id
      = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id
      WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery
  expected_output:
  - '198'
- name: question_218
  inputs: During a recent health fair focused on male health, community organizers
    were curious about how many men, specifically those born in the mid-20th century,
    had concerning lab results regarding CPK levels. Can you determine the number
    of these men who were born between 1936 and 1956 and had elevated CPK levels?
  metadata:
    chunk_id: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory
      AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND
      '1956' AND T1.SEX = 'M' AND T2.CPK >= 250
  expected_output:
  - '1231'
- name: question_219
  inputs: During a particularly rainy week in October, a health clinic evaluated its
    patient demographics to assess kidney health. Can you determine if there were
    more male patients than female patients among those experiencing elevated creatinine
    levels?
  metadata:
    chunk_id: SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE
      WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient
      AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5
  expected_output:
  - '1223'
- name: question_220
  inputs: In a study conducted in a different city, does the number of male patients
    with a laboratory result greater than 2.0 exceed the number of female patients?
  metadata:
    chunk_id: SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE
      WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient
      AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5
  expected_output:
  - '1223'
- name: question_221
  inputs: During the years when a significant health awareness campaign took place,
    how many male patients were diagnosed with a specific inflammatory condition and
    had not been admitted to a medical facility?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T1.SEX = 'M' AND STRFTIME('%Y',
      T2.`Examination Date`) BETWEEN '1995' AND '1997' AND T1.Admission = '-'
  expected_output:
  - '1202'
- name: question_222
  inputs: How many male patients were diagnosed with a rare autoimmune condition between
    1996 and 1998 who had not been admitted to the hospital?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T1.SEX = 'M' AND STRFTIME('%Y',
      T2.`Examination Date`) BETWEEN '1995' AND '1997' AND T1.Admission = '-'
  expected_output:
  - '1202'
- name: question_223
  inputs: While analyzing the impact of volatile market conditions on trading strategies,
    what is the frequency of an account with a significant total trading amount, and
    which trading symbols does it utilize for transactions?
  metadata:
    chunk_id: SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT
      account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id,
      k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND
      T2.total_amount = 3539
  expected_output:
  - '173'
- name: question_224
  inputs: What is the frequency of a specific account and its associated symbol when
    the total amount of orders exceeds a certain threshold?
  metadata:
    chunk_id: SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT
      account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id,
      k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND
      T2.total_amount = 3539
  expected_output:
  - '173'
- name: question_225
  inputs: What is the percentage change in loan amounts for male clients who are account
    owners between the years 1999 and 1998?
  metadata:
    chunk_id: SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount
      ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount
      ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996'
      THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id
      = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER
      JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type
      = 'OWNER'
  expected_output:
  - '169'
- name: question_226
  inputs: What demographic information can be gathered about patients diagnosed with
    a specific condition and who have certain lab result values in the last 6 months?
  metadata:
    chunk_id: SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID
      = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS'
      AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123
  expected_output:
  - '1194'
- name: question_227
  inputs: In the midst of a snowstorm, the bank's loan department noticed a change
    in lending patterns. What percentage change occurred in the total loan amounts
    taken by male owner clients from one year to the next?
  metadata:
    chunk_id: SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount
      ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount
      ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996'
      THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id
      = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER
      JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type
      = 'OWNER'
  expected_output:
  - '169'
- name: question_228
  inputs: During a recent health seminar on the impact of lifestyle on mental health,
    a researcher wondered how many patients with a specific diagnosis and certain
    laboratory results were male or female. What can you tell me about the sex of
    patients diagnosed in this way?
  metadata:
    chunk_id: SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID
      = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS'
      AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123
  expected_output:
  - '1194'
- name: question_229
  inputs: What types of accounts, excluding 'OWNER', are associated with districts
    that fall within a specified range of values for a certain attribute? Additionally,
    how might this change if we investigated these types over a specified period,
    such as the last year?
  metadata:
    chunk_id: SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id
      = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE
      T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000
  expected_output:
  - '149'
- name: question_230
  inputs: In the year when a historic comet was visible in the night sky, which patients
    were admitted with a specific status and had laboratory test results for T-Bilirubin
    levels below the normal threshold during that October?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE
      '1991-10-%'
  expected_output:
  - '1192'
- name: question_231
  inputs: During a community festival, organizers want to identify the various types
    of accounts associated with districts, specifically looking to exclude any accounts
    that are categorized as 'OWNER'. What types of accounts can be found in the specified
    districts?
  metadata:
    chunk_id: SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id
      = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE
      T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000
  expected_output:
  - '149'
- name: question_232
  inputs: Which distinct patients who have not been admitted and had a T-BIL level
    under a certain threshold can be identified from laboratory tests conducted within
    a period of six months in the early 1990s?
  metadata:
    chunk_id: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2
      ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE
      '1991-10-%'
  expected_output:
  - '1192'
- name: question_233
  inputs: What percentage of male patients diagnosed with a different condition in
    1982 in Canada were included in the total male patients evaluated?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS
      REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981'
      AND SEX = 'M'
  expected_output:
  - '1191'
- name: question_234
  inputs: What unique card formats are available for cards associated with the set
    named 'Amonkhet' that have a legal status?
  metadata:
    chunk_id: SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format
      ELSE NULL END FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid
      WHERE T2.setCode IN ( SELECT code FROM sets WHERE name = 'Hour of Devastation'
      )
  expected_output:
  - '528'
- name: question_235
  inputs: In the years when the famous music festival was held outdoors during a heatwave,
    which language was most commonly associated with the music sets that had the highest
    average ID, specifically from releases between 2012 and 2015?
  metadata:
    chunk_id: SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM
      sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate
      BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language)
      DESC LIMIT 1
  expected_output:
  - '523'
- name: question_236
  inputs: What percentage of male patients diagnosed with a certain condition were
    recorded within the first 6 months of a specific year?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS
      REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981'
      AND SEX = 'M'
  expected_output:
  - '1191'
- name: question_237
  inputs: "How does the financial change in loan accounts, specifically for those\
    \ marked as default, relate to the broader economic effects of this month\u2019\
    s heavy rainfall in the district?"
  metadata:
    chunk_id: SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1
      INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district
      AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'
  expected_output:
  - '125'
- name: question_238
  inputs: What is the percentage change in the specified financial metric (A13 minus
    A12) for accounts in a particular district with loans that are currently designated
    as 'D' over the past 6 months?
  metadata:
    chunk_id: SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1
      INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district
      AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'
  expected_output:
  - '125'
- name: question_239
  inputs: Amidst the excitement of a local festival, where families gathered for food
    and games, what was the most common language used for translations of sets released
    between a defined period, based on a calculation involving their identifiers?
  metadata:
    chunk_id: SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM
      sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate
      BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language)
      DESC LIMIT 1
  expected_output:
  - '523'
- name: question_240
  inputs: What distinct statuses can be found for cards with a different frame version
    and a different artist, while still considering those that are compatible with
    the legacy format?
  metadata:
    chunk_id: SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS
      T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning
      = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'
  expected_output:
  - '521'
- name: question_241
  inputs: What percentage of laboratory results from tests conducted in a different
    state show values less than or equal to a specified threshold, while considering
    only those results that fall within a specific range for another attribute?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100
      / COUNT(ID) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30
  expected_output:
  - '1190'
- name: question_242
  inputs: At an art exhibition celebrating unique card designs, could you tell me
    what distinct statuses are associated with any legacy legalities of cards created
    by a renowned artist who included content warnings in their work? Keep in mind,
    these cards should not have been made in the year 1997.
  metadata:
    chunk_id: SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS
      T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning
      = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'
  expected_output:
  - '521'
- name: question_243
  inputs: What percentage of laboratory test results for patients in Spain have a
    UA value less than or equal to a specified threshold, considering only those results
    where U-PRO is within a certain range?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100
      / COUNT(ID) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30
  expected_output:
  - '1190'
- name: question_244
  inputs: What is the ID of the largest set in the database where the type is classified
    as 'leader'?
  metadata:
    chunk_id: SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC
      LIMIT 1
  expected_output:
  - '513'
- name: question_245
  inputs: How many examinations recorded in the past 6 months indicate a specific
    condition for thrombosis and show elevated levels of a particular antibody, compared
    to the average levels during the same period?
  metadata:
    chunk_id: SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern`
      = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis
      = 2 AND `ANA Pattern` = 'S')
  expected_output:
  - '1189'
- name: question_246
  inputs: What is the ID of the set with the greatest total size that is classified
    as 'leader'?
  metadata:
    chunk_id: SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC
      LIMIT 1
  expected_output:
  - '513'
- name: question_247
  inputs: How many patients with a specific condition have aCL IgM levels significantly
    above the average, given that they exhibit certain patterns in their ANA results
    over the past 18 months?
  metadata:
    chunk_id: SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern`
      = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis
      = 2 AND `ANA Pattern` = 'S')
  expected_output:
  - '1189'
- name: question_248
  inputs: What is the percentage change in account balances for loans made within
    the last 6 months, comparing the balance on two distinct dates from that period?
  metadata:
    chunk_id: SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date
      = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22',
      T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id =
      T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE
      T1.date = '1993-07-05'
  expected_output:
  - '116'
- name: question_249
  inputs: What was the percentage change in the T-CHO test results for patients born
    on a specific date, comparing the results from the first half of the year to the
    latter half of the same year?
  metadata:
    chunk_id: SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO`
      ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0
      END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE
      0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE
      T1.Birthday = '1959-02-18'
  expected_output:
  - '1185'
- name: question_250
  inputs: What is the percentage change in cholesterol levels for a patient born on
    '1959-02-18' between two different months, considering a time frame of 6 months
    instead of 2? What implications does this have for their health?
  metadata:
    chunk_id: SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO`
      ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0
      END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE
      0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE
      T1.Birthday = '1959-02-18'
  expected_output:
  - '1185'
- name: question_251
  inputs: In the midst of a nostalgic winter evening, Jane reminisces about her finances
    over the years while sipping hot cocoa. How does her account balance on a particular
    date in the past compare to another significant date, adjusted as a percentage,
    based on the transactions she reviewed from her bank?
  metadata:
    chunk_id: SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date
      = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22',
      T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id =
      T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE
      T1.date = '1993-07-05'
  expected_output:
  - '116'
- name: question_252
  inputs: What diagnosis was recorded for a patient in a specific country based on
    their first examination date, linked to another examination date where a particular
    condition was noted?
  metadata:
    chunk_id: SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination
      Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First
      Date`
  expected_output:
  - '1183'
- name: question_253
  inputs: What percentage of clients are male in the district identified as 'northern
    Canada', grouped by a secondary characteristic?
  metadata:
    chunk_id: SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id)
      FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id
      WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1
  expected_output:
  - '115'
- name: question_254
  inputs: During the recent autumn festival in a picturesque region, a survey was
    conducted to evaluate the gender distribution of clients in local services. What
    percentage of the surveyed clients in that district were male?
  metadata:
    chunk_id: SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id)
      FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id
      WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1
  expected_output:
  - '115'
- name: question_255
  inputs: What percentage of 'online only' sets exist for a language other than Portuguese
    (Brazil) in the last 1.5 years?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations
      WHERE language = 'Portuguese (Brazil)' )
  expected_output:
  - '507'
- name: question_256
  inputs: During an unseasonably rainy week, a patient visited the hospital where
    a major health conference was being held. Given their examination dates and previous
    diagnoses, what specific diagnosis was recorded for the patient on the date of
    their first examination?
  metadata:
    chunk_id: SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination
      Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First
      Date`
  expected_output:
  - '1183'
- name: question_257
  inputs: During the global economic downturn in the late 1980s, what was the most
    common diagnosis among patients who underwent examinations between 1985 and 1995?
  metadata:
    chunk_id: SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2
      ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31'
      GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1
  expected_output:
  - '1173'
- name: question_258
  inputs: What is the account ID associated with the largest discrepancy between the
    maximum and minimum values in the specified column for female clients who were
    born within the last 1.5 years?
  metadata:
    chunk_id: SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district )
      FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id
      INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS
      T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id
      FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11
      DESC LIMIT 1
  expected_output:
  - '94'
- name: question_259
  inputs: What percentage of sets are classified as online-only among those translated
    into a specific language over the last 6 months?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations
      WHERE language = 'Portuguese (Brazil)' )
  expected_output:
  - '507'
- name: question_260
  inputs: What was the most common diagnosis among patients examined in Germany during
    the 1990s?
  metadata:
    chunk_id: SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2
      ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31'
      GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1
  expected_output:
  - '1173'
- name: question_261
  inputs: What is the highest account ID associated with the district that has the
    oldest female client, and what is the difference between the maximum and minimum
    values of a specific attribute in that district?
  metadata:
    chunk_id: SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district )
      FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id
      INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS
      T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id
      FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11
      DESC LIMIT 1
  expected_output:
  - '94'
- name: question_262
  inputs: While planning a community event in a specific city, how can one find the
    administrative email contacts for schools that opened between 2009 and 2010, and
    are situated in a certain county known for its annual fair?
  metadata:
    chunk_id: SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools
      AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City
      = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009'
      AND '2010' AND T2.SOC = 62
  expected_output:
  - '87'
- name: question_263
  inputs: In the context of a local education initiative launched in a particular
    county during a two-year span, which schools in that area were active during that
    period and have specific administrative contacts available via email?
  metadata:
    chunk_id: SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools
      AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City
      = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009'
      AND '2010' AND T2.SOC = 62
  expected_output:
  - '87'
- name: question_264
  inputs: What percentage of items in sets, translated to French, are categorized
    as 'Non-Foil Only'?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations
      WHERE language = 'Japanese' )
  expected_output:
  - '506'
- name: question_265
  inputs: How many patients in France had examinations between 1985 and 1988 and were
    under the age of 18 at the time of their examinations?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990'
      AND '1993' AND STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.Birthday)
      < 18
  expected_output:
  - '1171'
- name: question_266
  inputs: In which cities can you find schools that offer magnet programs for grades
    K-8 and are associated with multiple provision types in their NSLP status over
    the past 6 months?
  metadata:
    chunk_id: SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools
      AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8'
      AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City
  expected_output:
  - '83'
- name: question_267
  inputs: What percentage of records from sets identified by a specific language translation
    were marked as non-foil only in the last 6 months?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL)
      * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations
      WHERE language = 'Japanese' )
  expected_output:
  - '506'
- name: question_268
  inputs: How many patients under the age of 18 had examinations in the United Kingdom
    between 1990 and 1993?
  metadata:
    chunk_id: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2
      ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990'
      AND '1993' AND STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.Birthday)
      < 18
  expected_output:
  - '1171'
- name: question_269
  inputs: What is the ratio of male patients with laboratory results not exceeding
    a specified threshold to female patients with a different threshold in a healthcare
    facility located in a different country?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE
      0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0
      END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
  expected_output:
  - '1169'
- name: question_270
  inputs: What is the ratio of male patients with specific laboratory results to female
    patients with different results in Europe?
  metadata:
    chunk_id: SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE
      0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0
      END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
  expected_output:
  - '1169'
- name: question_271
  inputs: What is the age of the youngest patient diagnosed with a rare condition
    during their latest laboratory visit in a major hospital?
  metadata:
    chunk_id: SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday
      FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis
      = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1
  expected_output:
  - '1168'
- name: question_272
  inputs: What is the earliest birthday of a patient diagnosed with a rare autoimmune
    disorder, and how old were they at the time of their first recorded laboratory
    visit?
  metadata:
    chunk_id: SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday
      FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis
      = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1
  expected_output:
  - '1168'
- name: question_273
  inputs: Amid a cold winter that has prompted increased health checks for the elderly,
    what is the average aCL IgG level for patients who are at least 50 years old and
    have been admitted to the hospital?
  metadata:
    chunk_id: SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS
      T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y',
      T1.Birthday) >= 50 AND T1.Admission = '+'
  expected_output:
  - '1161'
- name: question_274
  inputs: In the past 1.5 years, how many magnet schools offering grades K-8 are there
    in different cities, specifically for those that fall under multiple provision
    types in their NSLP status?
  metadata:
    chunk_id: SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools
      AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8'
      AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City
  expected_output:
  - '83'
- name: question_275
  inputs: During a local community festival in a sunlit city, education officials
    are curious about the traditional schools' demographics in their area. How many
    non-charter schools in the county are serving a student population where less
    than 18% are enrolled in free meal programs?
  metadata:
    chunk_id: SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON
      T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND
      CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18
  expected_output:
  - '62'
- name: question_276
  inputs: What is the average level of aCL IgG for patients aged 60 and above who
    have an admission status of '++'?
  metadata:
    chunk_id: SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS
      T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y',
      T1.Birthday) >= 50 AND T1.Admission = '+'
  expected_output:
  - '1161'
- name: question_277
  inputs: How many non-charter schools in a specific county had a free meal count
    to enrollment ratio of less than 18% over the past year?
  metadata:
    chunk_id: SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON
      T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND
      CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18
  expected_output:
  - '62'
- name: question_278
  inputs: Who are the top three students from the highest-scoring school in the last
    six months based on SAT scores?
  metadata:
    chunk_id: SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3,
      T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode
      ORDER BY T1.NumGE1500 DESC LIMIT 1
  expected_output:
  - '36'
- name: question_279
  inputs: "On a rainy day in September 2008, while fans celebrated a player\u2019\
    s milestone birthday, what were the goals scored by the home and away teams in\
    \ the match of a notable football league?"
  metadata:
    chunk_id: SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER
      JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League'
      AND t2.`date` LIKE '2008-09-24%'
  expected_output:
  - '1139'
- name: question_280
  inputs: Who are the administrators associated with the school that had the highest
    number of students scoring above a certain threshold in the last 6 months?
  metadata:
    chunk_id: SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3,
      T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode
      ORDER BY T1.NumGE1500 DESC LIMIT 1
  expected_output:
  - '36'
- name: question_281
  inputs: During a local festival in Belgium, what were the home and away team goals
    scored in the matches of a particular football league on that day?
  metadata:
    chunk_id: SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER
      JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League'
      AND t2.`date` LIKE '2008-09-24%'
  expected_output:
  - '1139'
- name: question_282
  inputs: Which schools in France are locally funded and have a greater difference
    between their total K-12 enrollment and enrollment for ages 5-17 compared to the
    average difference for locally funded schools?
  metadata:
    chunk_id: SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON
      T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment
      (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)`
      - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode
      = T4.CDSCode WHERE T4.FundingType = 'Locally funded')
  expected_output:
  - '28'
- name: question_283
  inputs: How does the overall performance rating of Player A compare to Player B
    on a given date in the year 2020?
  metadata:
    chunk_id: SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating
      ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating
      ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating
      ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2
      ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1,
      10) = '2013-07-12'
  expected_output:
  - '1115'
- name: question_284
  inputs: What is the percentage difference in overall ratings between two selected
    players on a specific date, considering data from the Player and Player_Attributes
    tables?
  metadata:
    chunk_id: SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating
      ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating
      ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating
      ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2
      ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1,
      10) = '2013-07-12'
  expected_output:
  - '1115'
- name: question_285
  inputs: In the past year, which locally funded schools have an enrollment difference
    between K-12 and ages 5-17 that exceeds the average difference among their peers?
  metadata:
    chunk_id: SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON
      T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment
      (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)`
      - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode
      = T4.CDSCode WHERE T4.FundingType = 'Locally funded')
  expected_output:
  - '28'
- name: question_286
  inputs: During a fictional international football tournament held from 2007 to 2016,
    how did the average performance rating of a key player in the team, particularly
    one known for his impactful plays, compare over the years leading up to the event?
  metadata:
    chunk_id: SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player
      AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id
      WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN
      '2007-02-22' AND '2016-04-21'
  expected_output:
  - '1114'
- name: question_287
  inputs: During the historic snowstorm that disrupted many football matches in Europe
    from 2007 to 2016, what was the average overall rating of a player who played
    for multiple teams, specifically focusing on his performance during that timeframe?
  metadata:
    chunk_id: SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player
      AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id
      WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN
      '2007-02-22' AND '2016-04-21'
  expected_output:
  - '1114'
- name: question_288
  inputs: How does the overall rating of Player X compare to Player Y in terms of
    percentage difference in a league other than their original?
  metadata:
    chunk_id: SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating
      ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating
      ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating
      ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id
      = t2.player_api_id
  expected_output:
  - '1094'
- name: question_289
  inputs: How does the overall rating of one player compare to another in terms of
    percentage difference over the last year?
  metadata:
    chunk_id: SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating
      ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating
      ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating
      ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id
      = t2.player_api_id
  expected_output:
  - '1094'
